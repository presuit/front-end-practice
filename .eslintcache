[{"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx":"1","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx":"2","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts":"3","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx":"4","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx":"5","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx":"6","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx":"7","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx":"8","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx":"9","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx":"10","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx":"11","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx":"12","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts":"13","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx":"14","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts":"15","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx":"16","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx":"17","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx":"18","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx":"19","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx":"20","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx":"21","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx":"22"},{"size":474,"mtime":1610371989440,"results":"23","hashOfConfig":"24"},{"size":410,"mtime":1610937151230,"results":"25","hashOfConfig":"24"},{"size":651,"mtime":1610427179696,"results":"26","hashOfConfig":"24"},{"size":592,"mtime":1610367065748,"results":"27","hashOfConfig":"24"},{"size":2774,"mtime":1610938259647,"results":"28","hashOfConfig":"24"},{"size":4259,"mtime":1610891672023,"results":"29","hashOfConfig":"24"},{"size":5035,"mtime":1610891672023,"results":"30","hashOfConfig":"24"},{"size":668,"mtime":1610891671995,"results":"31","hashOfConfig":"24"},{"size":2262,"mtime":1610940136616,"results":"32","hashOfConfig":"24"},{"size":2214,"mtime":1610891670955,"results":"33","hashOfConfig":"24"},{"size":776,"mtime":1610633602550,"results":"34","hashOfConfig":"24"},{"size":1902,"mtime":1610936897687,"results":"35","hashOfConfig":"24"},{"size":929,"mtime":1610928117533,"results":"36","hashOfConfig":"24"},{"size":6863,"mtime":1610592466741,"results":"37","hashOfConfig":"24"},{"size":260,"mtime":1610939999423,"results":"38","hashOfConfig":"24"},{"size":8161,"mtime":1610950899040,"results":"39","hashOfConfig":"24"},{"size":420,"mtime":1610628827681,"results":"40","hashOfConfig":"24"},{"size":418,"mtime":1610628902106,"results":"41","hashOfConfig":"24"},{"size":1875,"mtime":1610891671996,"results":"42","hashOfConfig":"24"},{"size":1876,"mtime":1610938055486,"results":"43","hashOfConfig":"24"},{"size":2253,"mtime":1610952628118,"results":"44","hashOfConfig":"24"},{"size":422,"mtime":1610938247510,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6h5vn9",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx",[],["97","98"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx",["99","100","101"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx",["102","103","104","105"],"import React from \"react\";\r\nimport { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { logIn, logInVariables } from \"../__generated__/logIn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { LogInInput } from \"../__generated__/globalTypes\";\r\n\r\nconst LOG_IN_MUTATION = gql`\r\n  mutation logIn($input: LogInInput!) {\r\n    logIn(input: $input) {\r\n      ok\r\n      error\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LogIn = () => {\r\n  const { register, getValues, errors, handleSubmit } = useForm<LogInInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: logIn) => {\r\n    const {\r\n      logIn: { ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      console.log(token);\r\n      localStorage.setItem(\"token\", token);\r\n      isLoggedIn(true);\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const onClick = () => {\r\n    const { email, password } = getValues();\r\n    logInMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const [logInMutation, { data, error: mutationError }] = useMutation<\r\n    logIn,\r\n    logInVariables\r\n  >(LOG_IN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  return (\r\n    <div className=\" min-h-screen   flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>로그인 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm  w-full  px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            로그인\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 로그인 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.types?.pattern && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 로그인 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            로그인\r\n          </button>\r\n          {mutationError && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {mutationError.message}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            아직 회원이 아니신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/create-account\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 회원가입 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx",["106","107","108"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { CreateAccountInput } from \"../__generated__/globalTypes\";\r\nimport {\r\n  createAccount,\r\n  createAccountVariables,\r\n} from \"../__generated__/createAccount\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccount($input: CreateAccountInput!) {\r\n    createAccount(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CreateAccount = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n  } = useForm<CreateAccountInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onClick = () => {\r\n    const { email, password, username } = getValues();\r\n    createAccountMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n          username,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const onCompleted = (data: createAccount) => {\r\n    const {\r\n      createAccount: { ok },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      alert(\"회원가입 성공! 로그인 해주세요\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [createAccountMutation, { data }] = useMutation<\r\n    createAccount,\r\n    createAccountVariables\r\n  >(CREATE_ACCOUNT_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\" min-h-full  bg-indigo-500 flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>회원가입 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm w-full   px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            회원가입\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 회원가입 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.types?.pattern && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"닉네임은 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"닉네임\"\r\n            required\r\n          />\r\n          {errors.username?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.username?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            회원가입\r\n          </button>\r\n          {data?.createAccount.error && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {data?.createAccount.error}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            이미 회원이신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 로그인 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx",["109"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx",["110"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  confirmVerificationCode,\r\n  confirmVerificationCodeVariables,\r\n} from \"../__generated__/confirmVerificationCode\";\r\n\r\nconst CONFIRM_VALIDATION_CODE_MUTATION = gql`\r\n  mutation confirmVerificationCode($input: ConfirmVerificationCodeInput!) {\r\n    confirmVerificationCode(input: $input) {\r\n      ok\r\n      error\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ValidationCode = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n  const code = location.search.split(\"?code=\")[1];\r\n  const onCompleted = (data: confirmVerificationCode) => {\r\n    const {\r\n      confirmVerificationCode: { ok, userId },\r\n    } = data;\r\n    if (ok && userId) {\r\n      client.writeFragment({\r\n        id: `User:${userId}`,\r\n        fragment: gql`\r\n          fragment UserVerifCodeFragment on User {\r\n            isVerified\r\n          }\r\n        `,\r\n        data: {\r\n          isVerified: true,\r\n        },\r\n      });\r\n      alert(\"성공적으로 인증 되었습니다.\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [confirmVerificationCodeMutation, { loading, data }] = useMutation<\r\n    confirmVerificationCode,\r\n    confirmVerificationCodeVariables\r\n  >(CONFIRM_VALIDATION_CODE_MUTATION, { onCompleted });\r\n  useEffect(() => {\r\n    confirmVerificationCodeMutation({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-indigo-500\">\r\n        {loading && (\r\n          <h1 className=\"text-white font-semibold text-2xl\">Loading...</h1>\r\n        )}\r\n        {!loading && data?.confirmVerificationCode.error && (\r\n          <>\r\n            <h1 className=\"text-white font-semibold text-2xl\">\r\n              {data?.confirmVerificationCode.error}\r\n            </h1>\r\n            <Link className=\"text-white mt-10\" to=\"/\">\r\n              홈으로 가기\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts",["111","112"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx",["113"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faUser,\r\n  faArrowCircleRight,\r\n  faArrowCircleLeft,\r\n  faCommentDots,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"../styles/animation.css\";\r\n\r\ninterface IHomeMenuProps {\r\n  totalPages?: number | null;\r\n  totalProducts?: number | null;\r\n  page?: number | null;\r\n  setPage?: React.Dispatch<React.SetStateAction<number>> | null;\r\n}\r\n\r\nexport const Menu: React.FC<IHomeMenuProps> = ({\r\n  totalPages,\r\n  totalProducts,\r\n  page,\r\n  setPage,\r\n}) => {\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const location = useLocation();\r\n  const menuDiv = useRef<HTMLDivElement>(null);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const triggerMenu = () => {\r\n    if (menuOpen) {\r\n      //  close It!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuSmall\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setMenuOpen((prev) => !prev);\r\n      }\r\n    } else {\r\n      //  Open it!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuBig\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          setMenuOpen((prev) => !prev);\r\n        }, 500);\r\n      }\r\n    }\r\n  };\r\n  const onClickMovePage = (e: any) => {\r\n    if (totalPages && totalProducts && page && setPage) {\r\n      let target = e.target;\r\n      if (e.target.tagName === \"path\") {\r\n        target = e.target.parentNode;\r\n      }\r\n      const targetIconAhead = target.getAttribute(\"data-icon\").split(\"-\")[2];\r\n      if (targetIconAhead === \"right\") {\r\n        if (page < totalPages) {\r\n          setPage((prev) => prev + 1);\r\n        }\r\n      }\r\n      if (targetIconAhead === \"left\") {\r\n        if (page > 1) {\r\n          setPage((prev) => prev - 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const path = location.pathname;\r\n    if (path === \"/\") {\r\n      setMode(\"home\");\r\n    }\r\n    if (path === \"/me\") {\r\n      setMode(\"me\");\r\n    }\r\n    if (path === \"/messages\") {\r\n      setMode(\"messages\");\r\n    }\r\n    triggerMenu();\r\n  }, [location]);\r\n  return (\r\n    <div className=\" flex justify-center items-center max-w-screen-md  mx-16 md:mx-auto fixed bottom-0 left-0 right-0  \">\r\n      <div\r\n        ref={menuDiv}\r\n        className=\"md:px-12 px-10 py-5 my-5   flex items-center justify-around  shadow-2xl bg-amber-300  rounded-full  \"\r\n      >\r\n        {mode === \"home\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleLeft}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={triggerMenu}\r\n                icon={faHome}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <h1\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow  \"\r\n              >\r\n                {page}\r\n              </h1>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleRight}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to={`/me`}>\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"me\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"messages\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/me\">\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-indigo-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx",["114"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx",["115"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\nexport const Messages = () => {\r\n  const history = useHistory();\r\n  const { loading, data } = useMe();\r\n  useEffect(() => {\r\n    if (!loading && data?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n  return <div>물좀 가져옴</div>;\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx",["116"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\nexport const UserProfile = () => {\r\n  const history = useHistory();\r\n  const { loading, data } = useMe();\r\n  useEffect(() => {\r\n    if (!loading && data?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n  return <div>UserProfile</div>;\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx",["117","118","119"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":7,"column":3,"nodeType":"126","messageId":"127","endLine":7,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":15,"column":10,"nodeType":"126","messageId":"127","endLine":15,"endColumn":25},{"ruleId":"124","severity":1,"message":"129","line":16,"column":10,"nodeType":"126","messageId":"127","endLine":16,"endColumn":19},{"ruleId":"124","severity":1,"message":"130","line":2,"column":15,"nodeType":"126","messageId":"127","endLine":2,"endColumn":30},{"ruleId":"124","severity":1,"message":"131","line":47,"column":27,"nodeType":"126","messageId":"127","endLine":47,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":70,"column":34,"nodeType":"134","messageId":"135","endLine":70,"endColumn":35,"suggestions":"136"},{"ruleId":"132","severity":1,"message":"133","line":70,"column":59,"nodeType":"134","messageId":"135","endLine":70,"endColumn":60,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"138","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":79,"column":34,"nodeType":"134","messageId":"135","endLine":79,"endColumn":35,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"133","line":79,"column":59,"nodeType":"134","messageId":"135","endLine":79,"endColumn":60,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":48,"column":6,"nodeType":"143","endLine":48,"endColumn":8,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":56,"column":6,"nodeType":"143","endLine":56,"endColumn":8,"suggestions":"146"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":20},{"ruleId":"124","severity":1,"message":"147","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":15},{"ruleId":"141","severity":1,"message":"148","line":90,"column":6,"nodeType":"143","endLine":90,"endColumn":16,"suggestions":"149"},{"ruleId":"141","severity":1,"message":"150","line":71,"column":6,"nodeType":"143","endLine":71,"endColumn":8,"suggestions":"151"},{"ruleId":"141","severity":1,"message":"150","line":12,"column":6,"nodeType":"143","endLine":12,"endColumn":8,"suggestions":"152"},{"ruleId":"141","severity":1,"message":"150","line":12,"column":6,"nodeType":"143","endLine":12,"endColumn":8,"suggestions":"153"},{"ruleId":"124","severity":1,"message":"154","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":10,"column":10,"nodeType":"126","messageId":"127","endLine":10,"endColumn":25},{"ruleId":"124","severity":1,"message":"155","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":21},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faSpinner' is defined but never used.","'useApolloClient' is defined but never used.","'data' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["158","159"],["160","161"],"'isLoggedIn' is defined but never used.",["162","163"],["164","165"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'page', 'refetch', 'userData?.me.user?.isVerified', and 'userLoading'. Either include them or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has missing dependencies: 'code' and 'confirmVerificationCodeMutation'. Either include them or remove the dependency array.",["167"],"'useMe' is defined but never used.","React Hook useEffect has a missing dependency: 'triggerMenu'. Either include it or remove the dependency array.",["168"],"React Hook useEffect has missing dependencies: 'data?.me.user?.isVerified', 'history', and 'loading'. Either include them or remove the dependency array.",["169"],["170"],["171"],"'Link' is defined but never used.","'faArrowLeft' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"172","fix":"173","desc":"174"},{"messageId":"175","fix":"176","desc":"177"},{"messageId":"172","fix":"178","desc":"174"},{"messageId":"175","fix":"179","desc":"177"},{"messageId":"172","fix":"180","desc":"174"},{"messageId":"175","fix":"181","desc":"177"},{"messageId":"172","fix":"182","desc":"174"},{"messageId":"175","fix":"183","desc":"177"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"190","fix":"193"},"removeEscape",{"range":"194","text":"195"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"196","text":"197"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"198","text":"195"},{"range":"199","text":"197"},{"range":"200","text":"195"},{"range":"201","text":"197"},{"range":"202","text":"195"},{"range":"203","text":"197"},"Update the dependencies array to be: [history, page, refetch, userData?.me.user?.isVerified, userLoading]",{"range":"204","text":"205"},"Update the dependencies array to be: [code, confirmVerificationCodeMutation]",{"range":"206","text":"207"},"Update the dependencies array to be: [location, triggerMenu]",{"range":"208","text":"209"},"Update the dependencies array to be: [data?.me.user?.isVerified, history, loading]",{"range":"210","text":"211"},{"range":"212","text":"211"},{"range":"213","text":"211"},[2101,2102],"",[2101,2101],"\\",[2126,2127],[2126,2126],[2233,2234],[2233,2233],[2258,2259],[2258,2258],[1288,1290],"[history, page, refetch, userData?.me.user?.isVerified, userLoading]",[1570,1572],"[code, confirmVerificationCodeMutation]",[2514,2524],"[location, triggerMenu]",[2277,2279],"[data?.me.user?.isVerified, history, loading]",[371,373],[374,376]]