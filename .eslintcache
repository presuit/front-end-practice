[{"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx":"1","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx":"2","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts":"3","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx":"4","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx":"5","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx":"6","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx":"7","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx":"8","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx":"9","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx":"10","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx":"11","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx":"12","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts":"13","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx":"14","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts":"15","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx":"16","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx":"17","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx":"18","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx":"19","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx":"20","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx":"21","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx":"22","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateProduct.tsx":"23","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\FullSizeImgBoard.tsx":"24","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\SellingHistory.tsx":"25","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\BackButton.tsx":"26","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\__generated__\\globalTypes.ts":"27"},{"size":474,"mtime":1610371989440,"results":"28","hashOfConfig":"29"},{"size":410,"mtime":1610937151230,"results":"30","hashOfConfig":"29"},{"size":931,"mtime":1611661168381,"results":"31","hashOfConfig":"29"},{"size":592,"mtime":1610367065748,"results":"32","hashOfConfig":"29"},{"size":2745,"mtime":1611661933138,"results":"33","hashOfConfig":"29"},{"size":4370,"mtime":1611720567598,"results":"34","hashOfConfig":"29"},{"size":5046,"mtime":1611720399755,"results":"35","hashOfConfig":"29"},{"size":668,"mtime":1610891671995,"results":"36","hashOfConfig":"29"},{"size":2437,"mtime":1611638179964,"results":"37","hashOfConfig":"29"},{"size":2333,"mtime":1611721261903,"results":"38","hashOfConfig":"29"},{"size":776,"mtime":1611718420492,"results":"39","hashOfConfig":"29"},{"size":1331,"mtime":1611719675565,"results":"40","hashOfConfig":"29"},{"size":1055,"mtime":1611551730027,"results":"41","hashOfConfig":"29"},{"size":7370,"mtime":1611715905974,"results":"42","hashOfConfig":"29"},{"size":330,"mtime":1611638813089,"results":"43","hashOfConfig":"29"},{"size":11806,"mtime":1611724704201,"results":"44","hashOfConfig":"29"},{"size":420,"mtime":1610628827681,"results":"45","hashOfConfig":"29"},{"size":7621,"mtime":1611724660761,"results":"46","hashOfConfig":"29"},{"size":2514,"mtime":1611721002562,"results":"47","hashOfConfig":"29"},{"size":2024,"mtime":1611148375359,"results":"48","hashOfConfig":"29"},{"size":12552,"mtime":1611719759447,"results":"49","hashOfConfig":"29"},{"size":422,"mtime":1610938247510,"results":"50","hashOfConfig":"29"},{"size":11311,"mtime":1611557624936,"results":"51","hashOfConfig":"29"},{"size":4082,"mtime":1611645197255,"results":"52","hashOfConfig":"29"},{"size":995,"mtime":1611718128697,"results":"53","hashOfConfig":"29"},{"size":600,"mtime":1611717662560,"results":"54","hashOfConfig":"29"},{"size":1237,"mtime":1611718991057,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"6h5vn9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx",[],["116","117"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx",["118","119","120","121","122"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx",["123","124","125"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx",["126"],"import { gql, useQuery, useReactiveVar } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { ProductGridItem } from \"../components/ProductGridItem\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport {\r\n  allProducts,\r\n  allProductsVariables,\r\n} from \"../__generated__/allProducts\";\r\nimport { PRODUCTS_FRAGMENT } from \"../fragment\";\r\nimport { Menu } from \"../components/Menu\";\r\nimport { currentHomePage } from \"../apollo\";\r\n\r\nconst ALL_PRODUCTS_QUERY = gql`\r\n  query allProducts($input: AllProductsInput!) {\r\n    allProducts(input: $input) {\r\n      ok\r\n      error\r\n      totalResults\r\n      totalPages\r\n      products {\r\n        ...productsParts\r\n      }\r\n    }\r\n  }\r\n\r\n  ${PRODUCTS_FRAGMENT}\r\n`;\r\n\r\nexport const Home = () => {\r\n  const history = useHistory();\r\n  const currentPage = useReactiveVar(currentHomePage);\r\n  const [page, setPage] = useState(currentPage);\r\n  const { data: userData, loading: userLoading } = useMe();\r\n  const {\r\n    data: productsData,\r\n    loading: productsLoading,\r\n    refetch,\r\n    error,\r\n  } = useQuery<allProducts, allProductsVariables>(ALL_PRODUCTS_QUERY, {\r\n    variables: {\r\n      input: {\r\n        page,\r\n      },\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    refetch({ input: { page } });\r\n  }, []);\r\n  if (!userLoading && userData?.me.user?.isVerified === false) {\r\n    history.push(\"/not-valid-user\");\r\n  }\r\n  console.log(productsData, error);\r\n  return (\r\n    <div>\r\n      {!userLoading && userData?.me.user?.isVerified === true && (\r\n        <div>\r\n          <div className=\"max-w-screen-2xl min-h-screen mx-16 2xl:mx-auto pt-10 pb-32 grid  md:grid-cols-4 gap-5 \">\r\n            {!productsLoading &&\r\n              productsData?.allProducts.products?.map((product) => (\r\n                <Link key={product.id} to={`/product/${product.id}`}>\r\n                  <ProductGridItem\r\n                    name={product.name}\r\n                    price={product.price}\r\n                    bigImg={product.bigImg}\r\n                    savedAmount={product.savedAmount}\r\n                  />\r\n                </Link>\r\n              ))}\r\n          </div>\r\n          <Menu\r\n            totalPages={productsData?.allProducts.totalPages}\r\n            totalProducts={productsData?.allProducts.totalResults}\r\n            page={page}\r\n            setPage={setPage}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx",["127"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx",["128","129"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts",["130","131"],"import { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"./hooks/useMe\";\r\n\r\nconst colors = [\r\n  \"blugGray\",\r\n  \"coolGray\",\r\n  \"trueGray\",\r\n  \"warmGray\",\r\n  \"orange\",\r\n  \"amber\",\r\n  \"lime\",\r\n  \"emerald\",\r\n  \"teal\",\r\n  \"cyan\",\r\n  \"lightBlue\",\r\n  \"violet\",\r\n  \"fuchsia\",\r\n  \"rose\",\r\n];\r\n\r\nexport const pickRandomBgColor = (): string => {\r\n  const index = Math.floor(Math.random() * colors.length);\r\n  return colors[index];\r\n};\r\n\r\nexport const getDate = (dateNumber: number): string => {\r\n  const dateObj = new Date(dateNumber);\r\n  const dateYear = dateObj.getFullYear();\r\n  const dateMonth = dateObj.getMonth() + 1;\r\n  const dateDate = dateObj.getDate();\r\n  return `${dateYear}년 ${dateMonth}월 ${dateDate}일`;\r\n};\r\n\r\nexport const getNameSuppressed = (name: string): string => {\r\n  let newName = name;\r\n  if (name.length > 10) {\r\n    newName = `${name.substr(0, 10)}...`;\r\n  }\r\n  return newName;\r\n};\r\n\r\nexport const numberWithCommas = (price: number) => {\r\n  return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport {};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx",["132"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx",["133","134","135","136","137","138"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx",["139"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\nexport const Messages = () => {\r\n  const history = useHistory();\r\n  const { loading, data } = useMe();\r\n  useEffect(() => {\r\n    if (!loading && data?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n  return <div>물좀 가져옴</div>;\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx",["140","141","142","143"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx",["144"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx",["145","146","147","148","149"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateProduct.tsx",["150","151","152","153"],"import { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { allCategories } from \"../__generated__/allCategories\";\r\nimport {\r\n  createProduct,\r\n  createProductVariables,\r\n} from \"../__generated__/createProduct\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowLeft,\r\n  faPlus,\r\n  faArrowRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\nimport { PointPercent } from \"../__generated__/globalTypes\";\r\n\r\nconst CREATE_PRODUCT_MUTATION = gql`\r\n  mutation createProduct($input: CreateProductInput!) {\r\n    createProduct(input: $input) {\r\n      ok\r\n      error\r\n      productId\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALL_CATEGORIES_QUERY = gql`\r\n  query allCategories {\r\n    allCategories {\r\n      ok\r\n      error\r\n      categories {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IFormProps {\r\n  imageUploads: FileList;\r\n  productName: string;\r\n  productPrice: string;\r\n  category: string;\r\n  pointPercentKor: string;\r\n}\r\n\r\nexport const CreateProduct = () => {\r\n  const descriptionDivRef = useRef<HTMLDivElement>(null);\r\n  let pointPercent = PointPercent.zeroDotOne;\r\n  const [previewImage, setPreviewImage] = useState<string[]>([]);\r\n  const [currentPreview, setCurrentPreview] = useState(0);\r\n  const { data: userData, loading: userLoading } = useMe();\r\n  const { data: categoriesData } = useQuery<allCategories>(\r\n    ALL_CATEGORIES_QUERY\r\n  );\r\n  const onCompleted = (data: createProduct) => {\r\n    const {\r\n      createProduct: { ok, error, productId },\r\n    } = data;\r\n    if (ok) {\r\n      alert(\"프로덕트가 성공적으로 create 되었습니다.\");\r\n      history.push(`/product/${productId}`);\r\n    } else {\r\n      alert(\"에러 발생!\");\r\n      console.log(error);\r\n    }\r\n  };\r\n  const [createProductMutation] = useMutation<\r\n    createProduct,\r\n    createProductVariables\r\n  >(CREATE_PRODUCT_MUTATION, { onCompleted });\r\n  const history = useHistory();\r\n  const { register, getValues, handleSubmit, errors } = useForm<IFormProps>({\r\n    mode: \"onChange\",\r\n  });\r\n  useEffect(() => {\r\n    if (!userLoading && userData?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n\r\n  const onClickToGoBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const onClickPreviewImageLeft = () => {\r\n    if (currentPreview === 0) {\r\n      setCurrentPreview(previewImage.length - 1);\r\n    }\r\n    if (currentPreview >= 1) {\r\n      setCurrentPreview((prev) => prev - 1);\r\n    }\r\n  };\r\n  const onClickPreviewImageRight = () => {\r\n    if (currentPreview === previewImage.length - 1) {\r\n      setCurrentPreview(0);\r\n    }\r\n    if (currentPreview < previewImage.length - 1) {\r\n      setCurrentPreview((prev) => prev + 1);\r\n    }\r\n  };\r\n  const parsePointPercentKorToEnum = (value: string): PointPercent => {\r\n    if (value === \"가격의 100%\") {\r\n      return PointPercent.full;\r\n    }\r\n    if (value === \"가격의 50%\") {\r\n      return PointPercent.half;\r\n    }\r\n    if (value === \"가격의 1%\") {\r\n      return PointPercent.one;\r\n    }\r\n    if (value === \"가격의 10%\") {\r\n      return PointPercent.ten;\r\n    }\r\n    if (value === \"가격의 0.1%\") {\r\n      return PointPercent.zeroDotOne;\r\n    }\r\n    return PointPercent.zeroDotOne;\r\n  };\r\n  const onSubmit = async () => {\r\n    const {\r\n      category,\r\n      imageUploads,\r\n      productName,\r\n      productPrice,\r\n      pointPercentKor,\r\n    } = getValues();\r\n    const description = descriptionDivRef.current?.innerHTML;\r\n    const pointPercent = parsePointPercentKorToEnum(pointPercentKor);\r\n    const formImgData = new FormData();\r\n    Object.values(imageUploads).forEach((eachImg) =>\r\n      formImgData.append(\"uploads\", eachImg)\r\n    );\r\n    const {\r\n      data,\r\n    }: { data: { uploaded: boolean; url: string }[] } = await axios({\r\n      method: \"POST\",\r\n      url: \"http://localhost:4000/uploads\",\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      data: formImgData,\r\n    });\r\n    if (data) {\r\n      const bigImg: string = data[0].uploaded ? data[0].url : \"\";\r\n      const detailImgs: string[] = data.map((eachData) =>\r\n        eachData.uploaded ? eachData.url : \"\"\r\n      );\r\n      await createProductMutation({\r\n        variables: {\r\n          input: {\r\n            categorySlug: category,\r\n            name: productName,\r\n            price: +productPrice,\r\n            description,\r\n            bigImg,\r\n            detailImgs,\r\n            pointPercent,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const generatePointPercentOption = (value: PointPercent) => {\r\n    if (value === PointPercent.full) {\r\n      return \"가격의 100%\";\r\n    }\r\n    if (value === PointPercent.half) {\r\n      return \"가격의 50%\";\r\n    }\r\n    if (value === PointPercent.one) {\r\n      return \"가격의 1%\";\r\n    }\r\n    if (value === PointPercent.ten) {\r\n      return \"가격의 10%\";\r\n    }\r\n    if (value === PointPercent.zeroDotOne) {\r\n      return \"가격의 0.1%\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"fixed top-0 left-0  ml-3 mt-5\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowLeft}\r\n          onClick={onClickToGoBack}\r\n          className=\"text-2xl 2xl:text-5xl text-amber-300 transition-colors cursor-pointer\"\r\n        />\r\n      </div>\r\n      <div className=\"max-w-screen-2xl min-h-screen mx-12 2xl:mx-auto shadow-2xl\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"flex\">\r\n            {previewImage && previewImage.length !== 0 && (\r\n              <div\r\n                onClick={onClickPreviewImageLeft}\r\n                className=\"px-3 md:px-5 cursor-pointer  flex items-center justify-center bg-indigo-900 \"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faArrowLeft}\r\n                  className=\"text-2xl md:text-4xl text-indigo-300  \"\r\n                />\r\n              </div>\r\n            )}\r\n            <label\r\n              htmlFor=\"imageUploads\"\r\n              className=\" h-64 md:h-96 bg-indigo-800 w-full flex justify-center items-center cursor-pointer\"\r\n            >\r\n              {previewImage && previewImage.length !== 0 && (\r\n                <img\r\n                  src={previewImage[currentPreview]}\r\n                  className=\"max-h-full  max-w-full\"\r\n                />\r\n              )}\r\n              {previewImage && previewImage.length === 0 && (\r\n                <FontAwesomeIcon\r\n                  icon={faPlus}\r\n                  className=\"text-5xl text-amber-400\"\r\n                />\r\n              )}\r\n            </label>\r\n            {previewImage && previewImage.length !== 0 && (\r\n              <div\r\n                onClick={onClickPreviewImageRight}\r\n                className=\"px-3 md:px-5 cursor-pointer  flex items-center justify-center bg-indigo-900   \"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faArrowRight}\r\n                  className=\"text-2xl md:text-4xl text-indigo-300   \"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <input\r\n            ref={register}\r\n            className=\"absolute opacity-0 pointer-events-none\"\r\n            type=\"file\"\r\n            name=\"imageUploads\"\r\n            id=\"imageUploads\"\r\n            accept=\"image/*\"\r\n            multiple={true}\r\n            onInput={() => {\r\n              if (previewImage.length !== 0) {\r\n                setPreviewImage([]);\r\n              }\r\n              const fileList: FileList = getValues(\"imageUploads\");\r\n              const keys = Object.keys(fileList);\r\n              for (const key of keys) {\r\n                const url = URL.createObjectURL(fileList.item(+key));\r\n                setPreviewImage((prev) => [...prev, url]);\r\n              }\r\n            }}\r\n          />\r\n          <div className=\"grid grid-cols-5 grid-rows-4 md:grid-rows-2 \">\r\n            <div className=\"col-start-1 col-span-5 md:col-start-1 md:col-span-3\">\r\n              <input\r\n                ref={register}\r\n                type=\"text\"\r\n                required\r\n                name=\"productName\"\r\n                placeholder=\"상품 이름 (20자 이하로 작성해 주세요)\"\r\n                className=\"w-full py-8 md:py-10 px-5 text-xs md:text-xl focus:outline-none bg-indigo-600 text-white  \"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center bg-indigo-600 row-start-2 row-span-1 col-start-1 col-span-5 md:col-start-1 md:col-span-3 md:row-start-2 md:row-span-1\">\r\n              <input\r\n                ref={register}\r\n                type=\"text\"\r\n                required\r\n                name=\"productPrice\"\r\n                placeholder=\"상품 가격\"\r\n                className=\"w-full py-8 md:py-10 px-5 text-xs md:text-xl focus:outline-none bg-indigo-600 text-white  \"\r\n              />\r\n              <span className=\" text-sm md:text-xl text-amber-300 pr-5\">\r\n                원\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"col-span-full row-start-3 row-span-1 md:col-start-4 md:col-span-2 md:row-start-1 md:row-span-1\">\r\n              <select\r\n                ref={register}\r\n                name=\"category\"\r\n                className=\"bg-indigo-400 text-xs md:text-xl font-semibold text-amber-300 focus:outline-none w-full h-full \"\r\n              >\r\n                {categoriesData?.allCategories.categories &&\r\n                  categoriesData?.allCategories.categories.map(\r\n                    (category, index) => (\r\n                      <option key={index} className=\"text-white \">\r\n                        {category.slug}\r\n                      </option>\r\n                    )\r\n                  )}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-span-full row-start-4 row-span-1 md:col-start-4 md:col-span-2 md:row-start-2 md:row-span-1\">\r\n              <select\r\n                ref={register}\r\n                name=\"pointPercentKor\"\r\n                className=\"bg-indigo-500 focus:outline-none text-xs md:text-xl font-semibold text-amber-300 w-full h-full\"\r\n              >\r\n                {Object.values(PointPercent).map((value, index) => (\r\n                  <option key={index} className=\"text-amber-300\">\r\n                    {generatePointPercentOption(value)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-14 py-12 px-10 bg-indigo-800\">\r\n            <div\r\n              ref={descriptionDivRef}\r\n              className=\"w-full rounded-lg px-5 py-5 focus:outline-none bg-indigo-100 text-black text-sm md:text-xl\"\r\n              contentEditable={true}\r\n              style={{ minHeight: \"500px\" }}\r\n            />\r\n          </div>\r\n          <div className=\"pb-10 flex justify-center items-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"py-5 px-10 md:px-20 text-base md:text-xl font-semibold bg-teal-500 rounded-full text-gray-200 focus:outline-none focus:ring-4 ring-teal-600\"\r\n            >\r\n              완료\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\FullSizeImgBoard.tsx",["154"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronRight,\r\n  faChevronLeft,\r\n  faTimes,\r\n  faCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface IProps {\r\n  detailImgs: { source: string }[];\r\n  fullSizeMode: boolean;\r\n  setFullSizeMode: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const FullSizeImgBoard: React.FC<IProps> = ({\r\n  detailImgs,\r\n  fullSizeMode,\r\n  setFullSizeMode,\r\n}) => {\r\n  const [imgIndex, setImgIndex] = useState<number>(0);\r\n\r\n  const onClickToExit = () => {\r\n    setFullSizeMode(false);\r\n  };\r\n\r\n  const onClickToLeft = () => {\r\n    let _index = imgIndex;\r\n    const prevImgPagination = document.getElementById(`imgPagination${_index}`);\r\n    let nextImgPagination: HTMLElement | null;\r\n\r\n    if (imgIndex === 0) {\r\n      setImgIndex(detailImgs.length - 1);\r\n      _index = detailImgs.length - 1;\r\n    } else {\r\n      setImgIndex((prev) => prev - 1);\r\n      _index -= 1;\r\n    }\r\n\r\n    nextImgPagination = document.getElementById(`imgPagination${_index}`);\r\n\r\n    if (prevImgPagination) {\r\n      prevImgPagination.style.color = \"black\";\r\n    }\r\n\r\n    if (nextImgPagination) {\r\n      nextImgPagination.style.color = \"rgba(252, 211, 77, 1)\";\r\n    }\r\n  };\r\n\r\n  const onClickToRight = () => {\r\n    let _index = imgIndex;\r\n    const prevImgPagination = document.getElementById(`imgPagination${_index}`);\r\n    let nextImgPagination: HTMLElement | null;\r\n\r\n    if (imgIndex === detailImgs.length - 1) {\r\n      _index = 0;\r\n      setImgIndex(0);\r\n    } else {\r\n      setImgIndex((prev) => prev + 1);\r\n      _index += 1;\r\n    }\r\n\r\n    nextImgPagination = document.getElementById(`imgPagination${_index}`);\r\n\r\n    if (prevImgPagination) {\r\n      prevImgPagination.style.color = \"black\";\r\n    }\r\n\r\n    if (nextImgPagination) {\r\n      nextImgPagination.style.color = \"rgba(252, 211, 77, 1)\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fullSizeImgBoard = document.getElementById(\"fullSizeImgBoard\");\r\n    if (fullSizeImgBoard) {\r\n      if (fullSizeMode) {\r\n        fullSizeImgBoard.style.visibility = \"visible\";\r\n        fullSizeImgBoard.style.opacity = \"1\";\r\n        fullSizeImgBoard.style.zIndex = \"50\";\r\n      } else {\r\n        fullSizeImgBoard.style.visibility = \"hidden\";\r\n        fullSizeImgBoard.style.opacity = \"0\";\r\n        fullSizeImgBoard.style.zIndex = \"0\";\r\n      }\r\n    }\r\n  }, [fullSizeMode]);\r\n\r\n  useEffect(() => {\r\n    const imgPagination = document.getElementById(`imgPagination0`);\r\n    if (imgPagination) {\r\n      imgPagination.style.color = \"rgba(252, 211, 77, 1)\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"fullSizeImgBoard\"\r\n      className=\"z-0 overflow-hidden w-full h-screen fixed top-0 left-0 bg-gray-800 flex justify-center items-center opacity-0 \"\r\n    >\r\n      <img\r\n        src={detailImgs[imgIndex].source}\r\n        className=\"max-w-full max-h-full\"\r\n        alt=\"Img\"\r\n        title=\"Img\"\r\n      />\r\n      {detailImgs && detailImgs.length !== 0 && (\r\n        <div className=\"bg-transparent py-5 px-3 flex justify-center items-center absolute bottom-0 left-0 right-0 mx-auto flex-wrap\">\r\n          {detailImgs.map((eachImg, index) => (\r\n            <FontAwesomeIcon\r\n              key={index}\r\n              id={`imgPagination${index}`}\r\n              icon={faCircle}\r\n              className=\"text-base md:text-xl text-black mx-5 my-3\"\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n      <FontAwesomeIcon\r\n        icon={faChevronLeft}\r\n        onClick={onClickToLeft}\r\n        className=\"absolute top-0 bottom-0 left-0 my-auto text-5xl mx-5 text-amber-300 cursor-pointer\"\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faChevronRight}\r\n        onClick={onClickToRight}\r\n        className=\"absolute top-0 bottom-0 right-0 my-auto text-5xl mx-5 text-amber-300 cursor-pointer\"\r\n      />\r\n      <FontAwesomeIcon\r\n        onClick={onClickToExit}\r\n        icon={faTimes}\r\n        className=\"absolute top-0 right-0 text-5xl text-amber-300 mx-5 my-5 cursor-pointer\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\SellingHistory.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\BackButton.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\__generated__\\globalTypes.ts",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":2,"column":15,"nodeType":"161","messageId":"162","endLine":2,"endColumn":30},{"ruleId":"159","severity":1,"message":"163","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":20},{"ruleId":"159","severity":1,"message":"164","line":9,"column":10,"nodeType":"161","messageId":"162","endLine":9,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":74,"column":34,"nodeType":"167","messageId":"168","endLine":74,"endColumn":35,"suggestions":"169"},{"ruleId":"165","severity":1,"message":"166","line":74,"column":59,"nodeType":"167","messageId":"168","endLine":74,"endColumn":60,"suggestions":"170"},{"ruleId":"159","severity":1,"message":"163","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":82,"column":34,"nodeType":"167","messageId":"168","endLine":82,"endColumn":35,"suggestions":"171"},{"ruleId":"165","severity":1,"message":"166","line":82,"column":59,"nodeType":"167","messageId":"168","endLine":82,"endColumn":60,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":49,"column":6,"nodeType":"175","endLine":49,"endColumn":8,"suggestions":"176"},{"ruleId":"173","severity":1,"message":"177","line":56,"column":6,"nodeType":"175","endLine":56,"endColumn":8,"suggestions":"178"},{"ruleId":"159","severity":1,"message":"179","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"180","line":1,"column":28,"nodeType":"161","messageId":"162","endLine":1,"endColumn":34},{"ruleId":"159","severity":1,"message":"181","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":20},{"ruleId":"159","severity":1,"message":"182","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":15},{"ruleId":"173","severity":1,"message":"183","line":94,"column":6,"nodeType":"175","endLine":94,"endColumn":16,"suggestions":"184"},{"ruleId":"159","severity":1,"message":"185","line":14,"column":29,"nodeType":"161","messageId":"162","endLine":14,"endColumn":37},{"ruleId":"159","severity":1,"message":"186","line":19,"column":3,"nodeType":"161","messageId":"162","endLine":19,"endColumn":15},{"ruleId":"159","severity":1,"message":"187","line":20,"column":3,"nodeType":"161","messageId":"162","endLine":20,"endColumn":24},{"ruleId":"173","severity":1,"message":"188","line":116,"column":6,"nodeType":"175","endLine":116,"endColumn":12,"suggestions":"189"},{"ruleId":"173","severity":1,"message":"190","line":124,"column":6,"nodeType":"175","endLine":124,"endColumn":21,"suggestions":"191"},{"ruleId":"173","severity":1,"message":"192","line":128,"column":6,"nodeType":"175","endLine":128,"endColumn":8,"suggestions":"193"},{"ruleId":"173","severity":1,"message":"194","line":12,"column":6,"nodeType":"175","endLine":12,"endColumn":8,"suggestions":"195"},{"ruleId":"159","severity":1,"message":"196","line":4,"column":3,"nodeType":"161","messageId":"162","endLine":4,"endColumn":10},{"ruleId":"159","severity":1,"message":"197","line":5,"column":3,"nodeType":"161","messageId":"162","endLine":5,"endColumn":9},{"ruleId":"159","severity":1,"message":"198","line":6,"column":3,"nodeType":"161","messageId":"162","endLine":6,"endColumn":10},{"ruleId":"173","severity":1,"message":"199","line":106,"column":6,"nodeType":"175","endLine":106,"endColumn":8,"suggestions":"200"},{"ruleId":"159","severity":1,"message":"163","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":20},{"ruleId":"159","severity":1,"message":"201","line":10,"column":10,"nodeType":"161","messageId":"162","endLine":10,"endColumn":25},{"ruleId":"159","severity":1,"message":"202","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":21},{"ruleId":"159","severity":1,"message":"203","line":135,"column":9,"nodeType":"161","messageId":"162","endLine":135,"endColumn":24},{"ruleId":"173","severity":1,"message":"204","line":153,"column":6,"nodeType":"175","endLine":153,"endColumn":16,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":335,"column":11,"nodeType":"208","endLine":338,"endColumn":12},{"ruleId":"159","severity":1,"message":"209","line":52,"column":7,"nodeType":"161","messageId":"162","endLine":52,"endColumn":19},{"ruleId":"159","severity":1,"message":"210","line":76,"column":46,"nodeType":"161","messageId":"162","endLine":76,"endColumn":52},{"ruleId":"173","severity":1,"message":"211","line":83,"column":6,"nodeType":"175","endLine":83,"endColumn":8,"suggestions":"212"},{"ruleId":"213","severity":1,"message":"214","line":211,"column":17,"nodeType":"208","endLine":214,"endColumn":19},{"ruleId":"159","severity":1,"message":"180","line":1,"column":21,"nodeType":"161","messageId":"162","endLine":1,"endColumn":27},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"@typescript-eslint/no-unused-vars","'useApolloClient' is defined but never used.","Identifier","unusedVar","'isLoggedIn' is defined but never used.","'data' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["217","218"],["219","220"],["221","222"],["223","224"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page' and 'refetch'. Either include them or remove the dependency array.","ArrayExpression",["225"],"React Hook useEffect has missing dependencies: 'code' and 'confirmVerificationCodeMutation'. Either include them or remove the dependency array.",["226"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useHistory' is defined but never used.","'useMe' is defined but never used.","React Hook useEffect has a missing dependency: 'triggerMenu'. Either include it or remove the dependency array.",["227"],"'useQuery' is defined but never used.","'findUserById' is defined but never used.","'findUserByIdVariables' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'sellingProductHistoryQuery'. Either include it or remove the dependency array.",["229"],"React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.",["230"],"React Hook useEffect has missing dependencies: 'data?.me.user?.isVerified', 'history', and 'loading'. Either include them or remove the dependency array.",["231"],"'faCheck' is defined but never used.","'faPlus' is defined but never used.","'faTimes' is defined but never used.","React Hook useEffect has missing dependencies: 'data?.findUserById.user', 'history', and 'userData?.me.user'. Either include them or remove the dependency array.",["232"],"'FontAwesomeIcon' is defined but never used.","'faArrowLeft' is defined but never used.","'onClickToGoBack' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userLoading'. Either include them or remove the dependency array.",["233"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'pointPercent' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'userData?.me.user?.isVerified', and 'userLoading'. Either include them or remove the dependency array.",["234"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"messageId":"235","fix":"236","desc":"237"},{"messageId":"238","fix":"239","desc":"240"},{"messageId":"235","fix":"241","desc":"237"},{"messageId":"238","fix":"242","desc":"240"},{"messageId":"235","fix":"243","desc":"237"},{"messageId":"238","fix":"244","desc":"240"},{"messageId":"235","fix":"245","desc":"237"},{"messageId":"238","fix":"246","desc":"240"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"removeEscape",{"range":"267","text":"268"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"269","text":"270"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"271","text":"268"},{"range":"272","text":"270"},{"range":"273","text":"268"},{"range":"274","text":"270"},{"range":"275","text":"268"},{"range":"276","text":"270"},"Update the dependencies array to be: [page, refetch]",{"range":"277","text":"278"},"Update the dependencies array to be: [code, confirmVerificationCodeMutation]",{"range":"279","text":"280"},"Update the dependencies array to be: [location, triggerMenu]",{"range":"281","text":"282"},"Update the dependencies array to be: [data, history]",{"range":"283","text":"284"},"Update the dependencies array to be: [data?.me.user, sellingProductHistoryQuery]",{"range":"285","text":"286"},"Update the dependencies array to be: [refetch]",{"range":"287","text":"288"},"Update the dependencies array to be: [data?.me.user?.isVerified, history, loading]",{"range":"289","text":"290"},"Update the dependencies array to be: [data?.findUserById.user, history, userData?.me.user]",{"range":"291","text":"292"},"Update the dependencies array to be: [history, userData, userLoading]",{"range":"293","text":"294"},"Update the dependencies array to be: [history, userData?.me.user?.isVerified, userLoading]",{"range":"295","text":"296"},[2167,2168],"",[2167,2167],"\\",[2192,2193],[2192,2192],[2276,2277],[2276,2276],[2301,2302],[2301,2301],[1317,1319],"[page, refetch]",[1570,1572],"[code, confirmVerificationCodeMutation]",[2653,2663],"[location, triggerMenu]",[3416,3422],"[data, history]",[3596,3611],"[data?.me.user, sellingProductHistoryQuery]",[3659,3661],"[refetch]",[371,373],"[data?.me.user?.isVerified, history, loading]",[3185,3187],"[data?.findUserById.user, history, userData?.me.user]",[4145,4155],"[history, userData, userLoading]",[2344,2346],"[history, userData?.me.user?.isVerified, userLoading]"]