[{"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx":"1","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx":"2","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts":"3","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx":"4","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx":"5","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx":"6","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx":"7","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx":"8","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx":"9","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx":"10","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx":"11","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx":"12","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts":"13","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx":"14","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts":"15","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx":"16","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx":"17","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx":"18","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx":"19","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx":"20","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx":"21","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx":"22","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateProduct.tsx":"23","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\__generated__\\globalTypes.ts":"24","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\FullSizeImgBoard.tsx":"25"},{"size":474,"mtime":1610371989440,"results":"26","hashOfConfig":"27"},{"size":410,"mtime":1610937151230,"results":"28","hashOfConfig":"27"},{"size":813,"mtime":1611635916876,"results":"29","hashOfConfig":"27"},{"size":592,"mtime":1610367065748,"results":"30","hashOfConfig":"27"},{"size":2777,"mtime":1611560890901,"results":"31","hashOfConfig":"27"},{"size":4259,"mtime":1610891672023,"results":"32","hashOfConfig":"27"},{"size":5035,"mtime":1610891672023,"results":"33","hashOfConfig":"27"},{"size":668,"mtime":1610891671995,"results":"34","hashOfConfig":"27"},{"size":2437,"mtime":1611638179964,"results":"35","hashOfConfig":"27"},{"size":2214,"mtime":1610891670955,"results":"36","hashOfConfig":"27"},{"size":776,"mtime":1610633602550,"results":"37","hashOfConfig":"27"},{"size":1137,"mtime":1611634526859,"results":"38","hashOfConfig":"27"},{"size":1055,"mtime":1611551730027,"results":"39","hashOfConfig":"27"},{"size":7323,"mtime":1611149349004,"results":"40","hashOfConfig":"27"},{"size":330,"mtime":1611638813089,"results":"41","hashOfConfig":"27"},{"size":9392,"mtime":1611635900158,"results":"42","hashOfConfig":"27"},{"size":420,"mtime":1610628827681,"results":"43","hashOfConfig":"27"},{"size":418,"mtime":1610628902106,"results":"44","hashOfConfig":"27"},{"size":2265,"mtime":1611561190805,"results":"45","hashOfConfig":"27"},{"size":2024,"mtime":1611148375359,"results":"46","hashOfConfig":"27"},{"size":11589,"mtime":1611645466236,"results":"47","hashOfConfig":"27"},{"size":422,"mtime":1610938247510,"results":"48","hashOfConfig":"27"},{"size":11311,"mtime":1611557624936,"results":"49","hashOfConfig":"27"},{"size":1179,"mtime":1611638817840,"results":"50","hashOfConfig":"27"},{"size":4082,"mtime":1611645197255,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"6h5vn9",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx",[],["112","113"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx",["114","115"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { Home } from \"../pages/Home\";\r\nimport { Me } from \"../pages/Me\";\r\nimport { Messages } from \"../pages/Messages\";\r\nimport { UserProfile } from \"../pages/UserProfile\";\r\nimport { ValidationCode } from \"../pages/ValidateCode\";\r\nimport \"../styles/animation.css\";\r\nimport { NotValidUser } from \"../pages/NotValidUser\";\r\nimport { Product } from \"../pages/Product\";\r\nimport { LoadingSpinner } from \"./LoadingSpinner\";\r\nimport { CreateProduct } from \"../pages/CreateProduct\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    component: Home,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/not-valid-user\",\r\n    component: NotValidUser,\r\n  },\r\n  {\r\n    path: \"/validate-code\",\r\n    component: ValidationCode,\r\n  },\r\n  {\r\n    path: \"/me\",\r\n    component: Me,\r\n  },\r\n  {\r\n    path: \"/users/:id\",\r\n    component: UserProfile,\r\n  },\r\n  {\r\n    path: \"/messages\",\r\n    component: Messages,\r\n  },\r\n\r\n  {\r\n    path: \"/category/:slug\",\r\n    component: Home,\r\n  },\r\n  {\r\n    path: \"/product/new\",\r\n    component: CreateProduct,\r\n  },\r\n  {\r\n    path: \"/product/:id\",\r\n    component: Product,\r\n  },\r\n];\r\n\r\nexport const LoggedInRouter = () => {\r\n  const { loading, error } = useMe();\r\n  const onClickToRestart = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n    window.location.href = \"/\";\r\n    window.location.reload();\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <div className=\"h-screen flex flex-col items-center justify-center  px-16\">\r\n          <h1 className=\"text-5xl font-bold text-red-500\">유저 에러 발생!</h1>\r\n          <h3 className=\"mt-10 text-3xl font-medium text-white\">\r\n            유저 토큰에 문제가 생겼습니다.\r\n          </h3>\r\n          <h3 className=\"mt-10 text-3xl font-medium text-white\">\r\n            다시 로그인 해주세요.\r\n          </h3>\r\n\r\n          <button\r\n            onClick={onClickToRestart}\r\n            className=\"mt-10 py-5 px-5 ring-4 ring-indigo-600  focus:outline-none rounded-lg shadow-lg text-white \"\r\n          >\r\n            다시 로그인하기\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {routes.map((route, index) => (\r\n          <Route\r\n            key={index}\r\n            path={route.path}\r\n            component={route.component}\r\n            exact={route.exact}\r\n          />\r\n        ))}\r\n        <Route>\r\n          <Redirect to={\"/\"} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx",["116","117","118","119"],"import React from \"react\";\r\nimport { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { logIn, logInVariables } from \"../__generated__/logIn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { LogInInput } from \"../__generated__/globalTypes\";\r\n\r\nconst LOG_IN_MUTATION = gql`\r\n  mutation logIn($input: LogInInput!) {\r\n    logIn(input: $input) {\r\n      ok\r\n      error\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LogIn = () => {\r\n  const { register, getValues, errors, handleSubmit } = useForm<LogInInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: logIn) => {\r\n    const {\r\n      logIn: { ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      console.log(token);\r\n      localStorage.setItem(\"token\", token);\r\n      isLoggedIn(true);\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const onClick = () => {\r\n    const { email, password } = getValues();\r\n    logInMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const [logInMutation, { data, error: mutationError }] = useMutation<\r\n    logIn,\r\n    logInVariables\r\n  >(LOG_IN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  return (\r\n    <div className=\" min-h-screen   flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>로그인 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm  w-full  px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            로그인\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 로그인 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.types?.pattern && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 로그인 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            로그인\r\n          </button>\r\n          {mutationError && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {mutationError.message}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            아직 회원이 아니신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/create-account\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 회원가입 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx",["120","121","122"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { CreateAccountInput } from \"../__generated__/globalTypes\";\r\nimport {\r\n  createAccount,\r\n  createAccountVariables,\r\n} from \"../__generated__/createAccount\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccount($input: CreateAccountInput!) {\r\n    createAccount(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CreateAccount = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n  } = useForm<CreateAccountInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onClick = () => {\r\n    const { email, password, username } = getValues();\r\n    createAccountMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n          username,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const onCompleted = (data: createAccount) => {\r\n    const {\r\n      createAccount: { ok },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      alert(\"회원가입 성공! 로그인 해주세요\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [createAccountMutation, { data }] = useMutation<\r\n    createAccount,\r\n    createAccountVariables\r\n  >(CREATE_ACCOUNT_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\" min-h-full  bg-indigo-500 flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>회원가입 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm w-full   px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            회원가입\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 회원가입 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.types?.pattern && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"닉네임은 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"닉네임\"\r\n            required\r\n          />\r\n          {errors.username?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.username?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            회원가입\r\n          </button>\r\n          {data?.createAccount.error && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {data?.createAccount.error}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            이미 회원이신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 로그인 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx",["123"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx",["124"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  confirmVerificationCode,\r\n  confirmVerificationCodeVariables,\r\n} from \"../__generated__/confirmVerificationCode\";\r\n\r\nconst CONFIRM_VALIDATION_CODE_MUTATION = gql`\r\n  mutation confirmVerificationCode($input: ConfirmVerificationCodeInput!) {\r\n    confirmVerificationCode(input: $input) {\r\n      ok\r\n      error\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ValidationCode = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n  const code = location.search.split(\"?code=\")[1];\r\n  const onCompleted = (data: confirmVerificationCode) => {\r\n    const {\r\n      confirmVerificationCode: { ok, userId },\r\n    } = data;\r\n    if (ok && userId) {\r\n      client.writeFragment({\r\n        id: `User:${userId}`,\r\n        fragment: gql`\r\n          fragment UserVerifCodeFragment on User {\r\n            isVerified\r\n          }\r\n        `,\r\n        data: {\r\n          isVerified: true,\r\n        },\r\n      });\r\n      alert(\"성공적으로 인증 되었습니다.\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [confirmVerificationCodeMutation, { loading, data }] = useMutation<\r\n    confirmVerificationCode,\r\n    confirmVerificationCodeVariables\r\n  >(CONFIRM_VALIDATION_CODE_MUTATION, { onCompleted });\r\n  useEffect(() => {\r\n    confirmVerificationCodeMutation({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-indigo-500\">\r\n        {loading && (\r\n          <h1 className=\"text-white font-semibold text-2xl\">Loading...</h1>\r\n        )}\r\n        {!loading && data?.confirmVerificationCode.error && (\r\n          <>\r\n            <h1 className=\"text-white font-semibold text-2xl\">\r\n              {data?.confirmVerificationCode.error}\r\n            </h1>\r\n            <Link className=\"text-white mt-10\" to=\"/\">\r\n              홈으로 가기\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx",["125","126"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts",["127","128"],"import { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"./hooks/useMe\";\r\n\r\nconst colors = [\r\n  \"blugGray\",\r\n  \"coolGray\",\r\n  \"trueGray\",\r\n  \"warmGray\",\r\n  \"orange\",\r\n  \"amber\",\r\n  \"lime\",\r\n  \"emerald\",\r\n  \"teal\",\r\n  \"cyan\",\r\n  \"lightBlue\",\r\n  \"violet\",\r\n  \"fuchsia\",\r\n  \"rose\",\r\n];\r\n\r\nexport const pickRandomBgColor = (): string => {\r\n  const index = Math.floor(Math.random() * colors.length);\r\n  return colors[index];\r\n};\r\n\r\nexport const getDate = (dateNumber: number): string => {\r\n  const dateObj = new Date(dateNumber);\r\n  const dateYear = dateObj.getFullYear();\r\n  const dateMonth = dateObj.getMonth() + 1;\r\n  const dateDate = dateObj.getDate();\r\n  return `${dateYear}년 ${dateMonth}월 ${dateDate}일`;\r\n};\r\n\r\nexport const getNameSuppressed = (name: string): string => {\r\n  let newName = name;\r\n  if (name.length > 10) {\r\n    newName = `${name.substr(0, 10)}...`;\r\n  }\r\n  return newName;\r\n};\r\n\r\nexport const numberWithCommas = (price: number) => {\r\n  return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport {};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx",["129"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faUser,\r\n  faArrowCircleRight,\r\n  faArrowCircleLeft,\r\n  faCommentDots,\r\n  faPlusCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"../styles/animation.css\";\r\nimport { currentHomePage } from \"../apollo\";\r\n\r\ninterface IHomeMenuProps {\r\n  totalPages?: number | null;\r\n  totalProducts?: number | null;\r\n  page?: number | null;\r\n  setPage?: React.Dispatch<React.SetStateAction<number>> | null;\r\n}\r\n\r\nexport const Menu: React.FC<IHomeMenuProps> = ({\r\n  totalPages,\r\n  totalProducts,\r\n  page,\r\n  setPage,\r\n}) => {\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const location = useLocation();\r\n  const menuDiv = useRef<HTMLDivElement>(null);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const triggerMenu = () => {\r\n    if (menuOpen) {\r\n      //  close It!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuSmall\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setMenuOpen((prev) => !prev);\r\n      }\r\n    } else {\r\n      //  Open it!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuBig\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          setMenuOpen((prev) => !prev);\r\n        }, 500);\r\n      }\r\n    }\r\n  };\r\n  const onClickMovePage = (e: any) => {\r\n    if (totalPages && totalProducts && page && setPage) {\r\n      let target = e.target;\r\n      if (e.target.tagName === \"path\") {\r\n        target = e.target.parentNode;\r\n      }\r\n      const targetIconAhead = target.getAttribute(\"data-icon\").split(\"-\")[2];\r\n      if (targetIconAhead === \"right\") {\r\n        if (page < totalPages) {\r\n          setPage((prev) => prev + 1);\r\n          currentHomePage(page + 1);\r\n        }\r\n      }\r\n      if (targetIconAhead === \"left\") {\r\n        if (page > 1) {\r\n          setPage((prev) => prev - 1);\r\n          currentHomePage(page - 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const path = location.pathname;\r\n    if (path === \"/\") {\r\n      setMode(\"home\");\r\n    }\r\n    if (path === \"/me\") {\r\n      setMode(\"me\");\r\n    }\r\n    if (path === \"/messages\") {\r\n      setMode(\"messages\");\r\n    }\r\n    triggerMenu();\r\n  }, [location]);\r\n  return (\r\n    <div className=\" flex justify-center items-center max-w-screen-md  mx-16 md:mx-auto fixed bottom-0 left-0 right-0  \">\r\n      <div\r\n        ref={menuDiv}\r\n        className=\"md:px-12 px-10 py-5 my-5   flex items-center justify-around  shadow-2xl bg-amber-300  rounded-full  \"\r\n      >\r\n        {mode === \"home\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleLeft}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={triggerMenu}\r\n                icon={faHome}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <h1\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow  \"\r\n              >\r\n                {page}\r\n              </h1>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleRight}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to={`/me`}>\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"me\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"messages\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/me\">\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-indigo-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      {mode === \"home\" && (\r\n        <div className=\"fixed bottom-0 right-0\">\r\n          <Link to=\"/product/new\">\r\n            <FontAwesomeIcon\r\n              icon={faPlusCircle}\r\n              className=\"mr-2 md:mr-5 mb-7 2xl:mr-10 text-5xl text-indigo-800\"\r\n            />\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx",["130"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\nexport const Messages = () => {\r\n  const history = useHistory();\r\n  const { loading, data } = useMe();\r\n  useEffect(() => {\r\n    if (!loading && data?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n  return <div>물좀 가져옴</div>;\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx",["131"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\nexport const UserProfile = () => {\r\n  const history = useHistory();\r\n  const { loading, data } = useMe();\r\n  useEffect(() => {\r\n    if (!loading && data?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n  return <div>UserProfile</div>;\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx",["132","133"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateProduct.tsx",["134","135","136","137"],"import { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { allCategories } from \"../__generated__/allCategories\";\r\nimport {\r\n  createProduct,\r\n  createProductVariables,\r\n} from \"../__generated__/createProduct\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faArrowLeft,\r\n  faPlus,\r\n  faArrowRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"axios\";\r\nimport { PointPercent } from \"../__generated__/globalTypes\";\r\n\r\nconst CREATE_PRODUCT_MUTATION = gql`\r\n  mutation createProduct($input: CreateProductInput!) {\r\n    createProduct(input: $input) {\r\n      ok\r\n      error\r\n      productId\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALL_CATEGORIES_QUERY = gql`\r\n  query allCategories {\r\n    allCategories {\r\n      ok\r\n      error\r\n      categories {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IFormProps {\r\n  imageUploads: FileList;\r\n  productName: string;\r\n  productPrice: string;\r\n  category: string;\r\n  pointPercentKor: string;\r\n}\r\n\r\nexport const CreateProduct = () => {\r\n  const descriptionDivRef = useRef<HTMLDivElement>(null);\r\n  let pointPercent = PointPercent.zeroDotOne;\r\n  const [previewImage, setPreviewImage] = useState<string[]>([]);\r\n  const [currentPreview, setCurrentPreview] = useState(0);\r\n  const { data: userData, loading: userLoading } = useMe();\r\n  const { data: categoriesData } = useQuery<allCategories>(\r\n    ALL_CATEGORIES_QUERY\r\n  );\r\n  const onCompleted = (data: createProduct) => {\r\n    const {\r\n      createProduct: { ok, error, productId },\r\n    } = data;\r\n    if (ok) {\r\n      alert(\"프로덕트가 성공적으로 create 되었습니다.\");\r\n      history.push(`/product/${productId}`);\r\n    } else {\r\n      alert(\"에러 발생!\");\r\n      console.log(error);\r\n    }\r\n  };\r\n  const [createProductMutation] = useMutation<\r\n    createProduct,\r\n    createProductVariables\r\n  >(CREATE_PRODUCT_MUTATION, { onCompleted });\r\n  const history = useHistory();\r\n  const { register, getValues, handleSubmit, errors } = useForm<IFormProps>({\r\n    mode: \"onChange\",\r\n  });\r\n  useEffect(() => {\r\n    if (!userLoading && userData?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n\r\n  const onClickToGoBack = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const onClickPreviewImageLeft = () => {\r\n    if (currentPreview === 0) {\r\n      setCurrentPreview(previewImage.length - 1);\r\n    }\r\n    if (currentPreview >= 1) {\r\n      setCurrentPreview((prev) => prev - 1);\r\n    }\r\n  };\r\n  const onClickPreviewImageRight = () => {\r\n    if (currentPreview === previewImage.length - 1) {\r\n      setCurrentPreview(0);\r\n    }\r\n    if (currentPreview < previewImage.length - 1) {\r\n      setCurrentPreview((prev) => prev + 1);\r\n    }\r\n  };\r\n  const parsePointPercentKorToEnum = (value: string): PointPercent => {\r\n    if (value === \"가격의 100%\") {\r\n      return PointPercent.full;\r\n    }\r\n    if (value === \"가격의 50%\") {\r\n      return PointPercent.half;\r\n    }\r\n    if (value === \"가격의 1%\") {\r\n      return PointPercent.one;\r\n    }\r\n    if (value === \"가격의 10%\") {\r\n      return PointPercent.ten;\r\n    }\r\n    if (value === \"가격의 0.1%\") {\r\n      return PointPercent.zeroDotOne;\r\n    }\r\n    return PointPercent.zeroDotOne;\r\n  };\r\n  const onSubmit = async () => {\r\n    const {\r\n      category,\r\n      imageUploads,\r\n      productName,\r\n      productPrice,\r\n      pointPercentKor,\r\n    } = getValues();\r\n    const description = descriptionDivRef.current?.innerHTML;\r\n    const pointPercent = parsePointPercentKorToEnum(pointPercentKor);\r\n    const formImgData = new FormData();\r\n    Object.values(imageUploads).forEach((eachImg) =>\r\n      formImgData.append(\"uploads\", eachImg)\r\n    );\r\n    const {\r\n      data,\r\n    }: { data: { uploaded: boolean; url: string }[] } = await axios({\r\n      method: \"POST\",\r\n      url: \"http://localhost:4000/uploads\",\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      data: formImgData,\r\n    });\r\n    if (data) {\r\n      const bigImg: string = data[0].uploaded ? data[0].url : \"\";\r\n      const detailImgs: string[] = data.map((eachData) =>\r\n        eachData.uploaded ? eachData.url : \"\"\r\n      );\r\n      await createProductMutation({\r\n        variables: {\r\n          input: {\r\n            categorySlug: category,\r\n            name: productName,\r\n            price: +productPrice,\r\n            description,\r\n            bigImg,\r\n            detailImgs,\r\n            pointPercent,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const generatePointPercentOption = (value: PointPercent) => {\r\n    if (value === PointPercent.full) {\r\n      return \"가격의 100%\";\r\n    }\r\n    if (value === PointPercent.half) {\r\n      return \"가격의 50%\";\r\n    }\r\n    if (value === PointPercent.one) {\r\n      return \"가격의 1%\";\r\n    }\r\n    if (value === PointPercent.ten) {\r\n      return \"가격의 10%\";\r\n    }\r\n    if (value === PointPercent.zeroDotOne) {\r\n      return \"가격의 0.1%\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"fixed top-0 left-0  ml-3 mt-5\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowLeft}\r\n          onClick={onClickToGoBack}\r\n          className=\"text-2xl 2xl:text-5xl text-amber-300 transition-colors cursor-pointer\"\r\n        />\r\n      </div>\r\n      <div className=\"max-w-screen-2xl min-h-screen mx-12 2xl:mx-auto shadow-2xl\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"flex\">\r\n            {previewImage && previewImage.length !== 0 && (\r\n              <div\r\n                onClick={onClickPreviewImageLeft}\r\n                className=\"px-3 md:px-5 cursor-pointer  flex items-center justify-center bg-indigo-900 \"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faArrowLeft}\r\n                  className=\"text-2xl md:text-4xl text-indigo-300  \"\r\n                />\r\n              </div>\r\n            )}\r\n            <label\r\n              htmlFor=\"imageUploads\"\r\n              className=\" h-64 md:h-96 bg-indigo-800 w-full flex justify-center items-center cursor-pointer\"\r\n            >\r\n              {previewImage && previewImage.length !== 0 && (\r\n                <img\r\n                  src={previewImage[currentPreview]}\r\n                  className=\"max-h-full  max-w-full\"\r\n                />\r\n              )}\r\n              {previewImage && previewImage.length === 0 && (\r\n                <FontAwesomeIcon\r\n                  icon={faPlus}\r\n                  className=\"text-5xl text-amber-400\"\r\n                />\r\n              )}\r\n            </label>\r\n            {previewImage && previewImage.length !== 0 && (\r\n              <div\r\n                onClick={onClickPreviewImageRight}\r\n                className=\"px-3 md:px-5 cursor-pointer  flex items-center justify-center bg-indigo-900   \"\r\n              >\r\n                <FontAwesomeIcon\r\n                  icon={faArrowRight}\r\n                  className=\"text-2xl md:text-4xl text-indigo-300   \"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <input\r\n            ref={register}\r\n            className=\"absolute opacity-0 pointer-events-none\"\r\n            type=\"file\"\r\n            name=\"imageUploads\"\r\n            id=\"imageUploads\"\r\n            accept=\"image/*\"\r\n            multiple={true}\r\n            onInput={() => {\r\n              if (previewImage.length !== 0) {\r\n                setPreviewImage([]);\r\n              }\r\n              const fileList: FileList = getValues(\"imageUploads\");\r\n              const keys = Object.keys(fileList);\r\n              for (const key of keys) {\r\n                const url = URL.createObjectURL(fileList.item(+key));\r\n                setPreviewImage((prev) => [...prev, url]);\r\n              }\r\n            }}\r\n          />\r\n          <div className=\"grid grid-cols-5 grid-rows-4 md:grid-rows-2 \">\r\n            <div className=\"col-start-1 col-span-5 md:col-start-1 md:col-span-3\">\r\n              <input\r\n                ref={register}\r\n                type=\"text\"\r\n                required\r\n                name=\"productName\"\r\n                placeholder=\"상품 이름 (20자 이하로 작성해 주세요)\"\r\n                className=\"w-full py-8 md:py-10 px-5 text-xs md:text-xl focus:outline-none bg-indigo-600 text-white  \"\r\n              />\r\n            </div>\r\n            <div className=\"flex items-center bg-indigo-600 row-start-2 row-span-1 col-start-1 col-span-5 md:col-start-1 md:col-span-3 md:row-start-2 md:row-span-1\">\r\n              <input\r\n                ref={register}\r\n                type=\"text\"\r\n                required\r\n                name=\"productPrice\"\r\n                placeholder=\"상품 가격\"\r\n                className=\"w-full py-8 md:py-10 px-5 text-xs md:text-xl focus:outline-none bg-indigo-600 text-white  \"\r\n              />\r\n              <span className=\" text-sm md:text-xl text-amber-300 pr-5\">\r\n                원\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"col-span-full row-start-3 row-span-1 md:col-start-4 md:col-span-2 md:row-start-1 md:row-span-1\">\r\n              <select\r\n                ref={register}\r\n                name=\"category\"\r\n                className=\"bg-indigo-400 text-xs md:text-xl font-semibold text-amber-300 focus:outline-none w-full h-full \"\r\n              >\r\n                {categoriesData?.allCategories.categories &&\r\n                  categoriesData?.allCategories.categories.map(\r\n                    (category, index) => (\r\n                      <option key={index} className=\"text-white \">\r\n                        {category.slug}\r\n                      </option>\r\n                    )\r\n                  )}\r\n              </select>\r\n            </div>\r\n            <div className=\"col-span-full row-start-4 row-span-1 md:col-start-4 md:col-span-2 md:row-start-2 md:row-span-1\">\r\n              <select\r\n                ref={register}\r\n                name=\"pointPercentKor\"\r\n                className=\"bg-indigo-500 focus:outline-none text-xs md:text-xl font-semibold text-amber-300 w-full h-full\"\r\n              >\r\n                {Object.values(PointPercent).map((value, index) => (\r\n                  <option key={index} className=\"text-amber-300\">\r\n                    {generatePointPercentOption(value)}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-14 py-12 px-10 bg-indigo-800\">\r\n            <div\r\n              ref={descriptionDivRef}\r\n              className=\"w-full rounded-lg px-5 py-5 focus:outline-none bg-indigo-100 text-black text-sm md:text-xl\"\r\n              contentEditable={true}\r\n              style={{ minHeight: \"500px\" }}\r\n            />\r\n          </div>\r\n          <div className=\"pb-10 flex justify-center items-center\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"py-5 px-10 md:px-20 text-base md:text-xl font-semibold bg-teal-500 rounded-full text-gray-200 focus:outline-none focus:ring-4 ring-teal-600\"\r\n            >\r\n              완료\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\FullSizeImgBoard.tsx",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"147","line":7,"column":3,"nodeType":"145","messageId":"146","endLine":7,"endColumn":13},{"ruleId":"143","severity":1,"message":"148","line":2,"column":15,"nodeType":"145","messageId":"146","endLine":2,"endColumn":30},{"ruleId":"143","severity":1,"message":"149","line":47,"column":27,"nodeType":"145","messageId":"146","endLine":47,"endColumn":31},{"ruleId":"150","severity":1,"message":"151","line":70,"column":34,"nodeType":"152","messageId":"153","endLine":70,"endColumn":35,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"151","line":70,"column":59,"nodeType":"152","messageId":"153","endLine":70,"endColumn":60,"suggestions":"155"},{"ruleId":"143","severity":1,"message":"156","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":79,"column":34,"nodeType":"152","messageId":"153","endLine":79,"endColumn":35,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"151","line":79,"column":59,"nodeType":"152","messageId":"153","endLine":79,"endColumn":60,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":49,"column":6,"nodeType":"161","endLine":49,"endColumn":8,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"163","line":56,"column":6,"nodeType":"161","endLine":56,"endColumn":8,"suggestions":"164"},{"ruleId":"143","severity":1,"message":"144","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"165","line":1,"column":28,"nodeType":"145","messageId":"146","endLine":1,"endColumn":34},{"ruleId":"143","severity":1,"message":"147","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":20},{"ruleId":"143","severity":1,"message":"166","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"159","severity":1,"message":"167","line":94,"column":6,"nodeType":"161","endLine":94,"endColumn":16,"suggestions":"168"},{"ruleId":"159","severity":1,"message":"169","line":12,"column":6,"nodeType":"161","endLine":12,"endColumn":8,"suggestions":"170"},{"ruleId":"159","severity":1,"message":"169","line":12,"column":6,"nodeType":"161","endLine":12,"endColumn":8,"suggestions":"171"},{"ruleId":"159","severity":1,"message":"172","line":146,"column":6,"nodeType":"161","endLine":146,"endColumn":16,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":308,"column":11,"nodeType":"176","endLine":311,"endColumn":12},{"ruleId":"143","severity":1,"message":"177","line":52,"column":7,"nodeType":"145","messageId":"146","endLine":52,"endColumn":19},{"ruleId":"143","severity":1,"message":"178","line":76,"column":46,"nodeType":"145","messageId":"146","endLine":76,"endColumn":52},{"ruleId":"159","severity":1,"message":"179","line":83,"column":6,"nodeType":"161","endLine":83,"endColumn":8,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":211,"column":17,"nodeType":"176","endLine":214,"endColumn":19},{"ruleId":"143","severity":1,"message":"165","line":1,"column":21,"nodeType":"145","messageId":"146","endLine":1,"endColumn":27},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'useApolloClient' is defined but never used.","'data' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["185","186"],["187","188"],"'isLoggedIn' is defined but never used.",["189","190"],["191","192"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page' and 'refetch'. Either include them or remove the dependency array.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'code' and 'confirmVerificationCodeMutation'. Either include them or remove the dependency array.",["194"],"'useRef' is defined but never used.","'useMe' is defined but never used.","React Hook useEffect has a missing dependency: 'triggerMenu'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'data?.me.user?.isVerified', 'history', and 'loading'. Either include them or remove the dependency array.",["196"],["197"],"React Hook useEffect has missing dependencies: 'history' and 'userLoading'. Either include them or remove the dependency array.",["198"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'pointPercent' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'userData?.me.user?.isVerified', and 'userLoading'. Either include them or remove the dependency array.",["199"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"messageId":"200","fix":"201","desc":"202"},{"messageId":"203","fix":"204","desc":"205"},{"messageId":"200","fix":"206","desc":"202"},{"messageId":"203","fix":"207","desc":"205"},{"messageId":"200","fix":"208","desc":"202"},{"messageId":"203","fix":"209","desc":"205"},{"messageId":"200","fix":"210","desc":"202"},{"messageId":"203","fix":"211","desc":"205"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"218","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"removeEscape",{"range":"225","text":"226"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"227","text":"228"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"229","text":"226"},{"range":"230","text":"228"},{"range":"231","text":"226"},{"range":"232","text":"228"},{"range":"233","text":"226"},{"range":"234","text":"228"},"Update the dependencies array to be: [page, refetch]",{"range":"235","text":"236"},"Update the dependencies array to be: [code, confirmVerificationCodeMutation]",{"range":"237","text":"238"},"Update the dependencies array to be: [location, triggerMenu]",{"range":"239","text":"240"},"Update the dependencies array to be: [data?.me.user?.isVerified, history, loading]",{"range":"241","text":"242"},{"range":"243","text":"242"},"Update the dependencies array to be: [history, userData, userLoading]",{"range":"244","text":"245"},"Update the dependencies array to be: [history, userData?.me.user?.isVerified, userLoading]",{"range":"246","text":"247"},[2101,2102],"",[2101,2101],"\\",[2126,2127],[2126,2126],[2233,2234],[2233,2233],[2258,2259],[2258,2258],[1317,1319],"[page, refetch]",[1570,1572],"[code, confirmVerificationCodeMutation]",[2653,2663],"[location, triggerMenu]",[371,373],"[data?.me.user?.isVerified, history, loading]",[374,376],[3913,3923],"[history, userData, userLoading]",[2344,2346],"[history, userData?.me.user?.isVerified, userLoading]"]