[{"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx":"1","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx":"2","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts":"3","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx":"4","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx":"5","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx":"6","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx":"7","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx":"8","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx":"9","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx":"10","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx":"11","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx":"12","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts":"13","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx":"14","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts":"15","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx":"16","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx":"17","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx":"18","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx":"19","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx":"20"},{"size":474,"mtime":1610371989440,"results":"21","hashOfConfig":"22"},{"size":446,"mtime":1610593320226,"results":"23","hashOfConfig":"22"},{"size":651,"mtime":1610427179696,"results":"24","hashOfConfig":"22"},{"size":592,"mtime":1610367065748,"results":"25","hashOfConfig":"22"},{"size":2582,"mtime":1610635258914,"results":"26","hashOfConfig":"22"},{"size":4268,"mtime":1610430787444,"results":"27","hashOfConfig":"22"},{"size":5031,"mtime":1610453045385,"results":"28","hashOfConfig":"22"},{"size":664,"mtime":1610367663751,"results":"29","hashOfConfig":"22"},{"size":2140,"mtime":1610633585377,"results":"30","hashOfConfig":"22"},{"size":2210,"mtime":1610431505480,"results":"31","hashOfConfig":"22"},{"size":776,"mtime":1610633602550,"results":"32","hashOfConfig":"22"},{"size":1888,"mtime":1610590279732,"results":"33","hashOfConfig":"22"},{"size":453,"mtime":1610628746334,"results":"34","hashOfConfig":"22"},{"size":6863,"mtime":1610592466741,"results":"35","hashOfConfig":"22"},{"size":243,"mtime":1610586309422,"results":"36","hashOfConfig":"22"},{"size":8583,"mtime":1610635172353,"results":"37","hashOfConfig":"22"},{"size":420,"mtime":1610628827681,"results":"38","hashOfConfig":"22"},{"size":418,"mtime":1610628902106,"results":"39","hashOfConfig":"22"},{"size":1871,"mtime":1610628448687,"results":"40","hashOfConfig":"22"},{"size":1461,"mtime":1610634977699,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6h5vn9",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx",[],["87","88"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx",["89"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx",["90","91","92","93"],"import React from \"react\";\r\nimport { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { logIn, logInVariables } from \"../__generated__/logIn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { LogInInput } from \"../__generated__/globalTypes\";\r\n\r\nconst LOG_IN_MUTATION = gql`\r\n  mutation logIn($input: LogInInput!) {\r\n    logIn(input: $input) {\r\n      ok\r\n      error\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LogIn = () => {\r\n  const { register, getValues, errors, handleSubmit } = useForm<LogInInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: logIn) => {\r\n    const {\r\n      logIn: { ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      console.log(token);\r\n      localStorage.setItem(\"token\", token);\r\n      isLoggedIn(true);\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const onClick = () => {\r\n    const { email, password } = getValues();\r\n    logInMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const [logInMutation, { data, error: mutationError }] = useMutation<\r\n    logIn,\r\n    logInVariables\r\n  >(LOG_IN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  return (\r\n    <div className=\" h-screen  bg-indigo-500 flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>로그인 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm  w-full  px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            로그인\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 로그인 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.types?.pattern && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 로그인 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            로그인\r\n          </button>\r\n          {mutationError && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {mutationError.message}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            아직 회원이 아니신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/create-account\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 회원가입 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx",["94","95","96"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { CreateAccountInput } from \"../__generated__/globalTypes\";\r\nimport {\r\n  createAccount,\r\n  createAccountVariables,\r\n} from \"../__generated__/createAccount\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccount($input: CreateAccountInput!) {\r\n    createAccount(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CreateAccount = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n  } = useForm<CreateAccountInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onClick = () => {\r\n    const { email, password, username } = getValues();\r\n    createAccountMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n          username,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const onCompleted = (data: createAccount) => {\r\n    const {\r\n      createAccount: { ok },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      alert(\"회원가입 성공! 로그인 해주세요\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [createAccountMutation, { data }] = useMutation<\r\n    createAccount,\r\n    createAccountVariables\r\n  >(CREATE_ACCOUNT_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\" h-screen  bg-indigo-500 flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>회원가입 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm w-full   px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            회원가입\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 회원가입 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.types?.pattern && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"닉네임은 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"닉네임\"\r\n            required\r\n          />\r\n          {errors.username?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.username?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            회원가입\r\n          </button>\r\n          {data?.createAccount.error && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {data?.createAccount.error}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            이미 회원이신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 로그인 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx",["97"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx",["98"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  confirmVerificationCode,\r\n  confirmVerificationCodeVariables,\r\n} from \"../__generated__/confirmVerificationCode\";\r\n\r\nconst CONFIRM_VALIDATION_CODE_MUTATION = gql`\r\n  mutation confirmVerificationCode($input: ConfirmVerificationCodeInput!) {\r\n    confirmVerificationCode(input: $input) {\r\n      ok\r\n      error\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ValidationCode = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n  const code = location.search.split(\"?code=\")[1];\r\n  const onCompleted = (data: confirmVerificationCode) => {\r\n    const {\r\n      confirmVerificationCode: { ok, userId },\r\n    } = data;\r\n    if (ok && userId) {\r\n      client.writeFragment({\r\n        id: `User:${userId}`,\r\n        fragment: gql`\r\n          fragment UserVerifCodeFragment on User {\r\n            isVerified\r\n          }\r\n        `,\r\n        data: {\r\n          isVerified: true,\r\n        },\r\n      });\r\n      alert(\"성공적으로 인증 되었습니다.\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [confirmVerificationCodeMutation, { loading, data }] = useMutation<\r\n    confirmVerificationCode,\r\n    confirmVerificationCodeVariables\r\n  >(CONFIRM_VALIDATION_CODE_MUTATION, { onCompleted });\r\n  useEffect(() => {\r\n    confirmVerificationCodeMutation({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"h-screen flex flex-col justify-center items-center bg-indigo-500\">\r\n        {loading && (\r\n          <h1 className=\"text-white font-semibold text-2xl\">Loading...</h1>\r\n        )}\r\n        {!loading && data?.confirmVerificationCode.error && (\r\n          <>\r\n            <h1 className=\"text-white font-semibold text-2xl\">\r\n              {data?.confirmVerificationCode.error}\r\n            </h1>\r\n            <Link className=\"text-white mt-10\" to=\"/\">\r\n              홈으로 가기\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts",["99","100"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx",["101"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faUser,\r\n  faArrowCircleRight,\r\n  faArrowCircleLeft,\r\n  faCommentDots,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"../styles/animation.css\";\r\n\r\ninterface IHomeMenuProps {\r\n  totalPages?: number | null;\r\n  totalProducts?: number | null;\r\n  page?: number | null;\r\n  setPage?: React.Dispatch<React.SetStateAction<number>> | null;\r\n}\r\n\r\nexport const Menu: React.FC<IHomeMenuProps> = ({\r\n  totalPages,\r\n  totalProducts,\r\n  page,\r\n  setPage,\r\n}) => {\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const location = useLocation();\r\n  const menuDiv = useRef<HTMLDivElement>(null);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const triggerMenu = () => {\r\n    if (menuOpen) {\r\n      //  close It!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuSmall\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setMenuOpen((prev) => !prev);\r\n      }\r\n    } else {\r\n      //  Open it!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuBig\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          setMenuOpen((prev) => !prev);\r\n        }, 500);\r\n      }\r\n    }\r\n  };\r\n  const onClickMovePage = (e: any) => {\r\n    if (totalPages && totalProducts && page && setPage) {\r\n      let target = e.target;\r\n      if (e.target.tagName === \"path\") {\r\n        target = e.target.parentNode;\r\n      }\r\n      const targetIconAhead = target.getAttribute(\"data-icon\").split(\"-\")[2];\r\n      if (targetIconAhead === \"right\") {\r\n        if (page < totalPages) {\r\n          setPage((prev) => prev + 1);\r\n        }\r\n      }\r\n      if (targetIconAhead === \"left\") {\r\n        if (page > 1) {\r\n          setPage((prev) => prev - 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const path = location.pathname;\r\n    if (path === \"/\") {\r\n      setMode(\"home\");\r\n    }\r\n    if (path === \"/me\") {\r\n      setMode(\"me\");\r\n    }\r\n    if (path === \"/messages\") {\r\n      setMode(\"messages\");\r\n    }\r\n    triggerMenu();\r\n  }, [location]);\r\n  return (\r\n    <div className=\" flex justify-center items-center max-w-screen-md  mx-16 md:mx-auto fixed bottom-0 left-0 right-0  \">\r\n      <div\r\n        ref={menuDiv}\r\n        className=\"md:px-12 px-10 py-5 my-5   flex items-center justify-around  shadow-2xl bg-amber-300  rounded-full  \"\r\n      >\r\n        {mode === \"home\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleLeft}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={triggerMenu}\r\n                icon={faHome}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <h1\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow  \"\r\n              >\r\n                {page}\r\n              </h1>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleRight}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to={`/me`}>\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"me\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"messages\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/me\">\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-indigo-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx",["102"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx",["103"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx",["104"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":7,"column":3,"nodeType":"112","messageId":"113","endLine":7,"endColumn":13},{"ruleId":"110","severity":1,"message":"114","line":2,"column":15,"nodeType":"112","messageId":"113","endLine":2,"endColumn":30},{"ruleId":"110","severity":1,"message":"115","line":47,"column":27,"nodeType":"112","messageId":"113","endLine":47,"endColumn":31},{"ruleId":"116","severity":1,"message":"117","line":70,"column":34,"nodeType":"118","messageId":"119","endLine":70,"endColumn":35,"suggestions":"120"},{"ruleId":"116","severity":1,"message":"117","line":70,"column":59,"nodeType":"118","messageId":"119","endLine":70,"endColumn":60,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":5,"column":10,"nodeType":"112","messageId":"113","endLine":5,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":79,"column":34,"nodeType":"118","messageId":"119","endLine":79,"endColumn":35,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"117","line":79,"column":59,"nodeType":"118","messageId":"119","endLine":79,"endColumn":60,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":47,"column":6,"nodeType":"127","endLine":47,"endColumn":8,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":56,"column":6,"nodeType":"127","endLine":56,"endColumn":8,"suggestions":"130"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":20},{"ruleId":"110","severity":1,"message":"131","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":15},{"ruleId":"125","severity":1,"message":"132","line":90,"column":6,"nodeType":"127","endLine":90,"endColumn":16,"suggestions":"133"},{"ruleId":"125","severity":1,"message":"134","line":71,"column":6,"nodeType":"127","endLine":71,"endColumn":8,"suggestions":"135"},{"ruleId":"125","severity":1,"message":"134","line":12,"column":6,"nodeType":"127","endLine":12,"endColumn":8,"suggestions":"136"},{"ruleId":"125","severity":1,"message":"134","line":12,"column":6,"nodeType":"127","endLine":12,"endColumn":8,"suggestions":"137"},{"ruleId":"110","severity":1,"message":"138","line":27,"column":11,"nodeType":"112","messageId":"113","endLine":27,"endColumn":18},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useApolloClient' is defined but never used.","'data' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["141","142"],["143","144"],"'isLoggedIn' is defined but never used.",["145","146"],["147","148"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'userData?.me.user?.isVerified', and 'userLoading'. Either include them or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has missing dependencies: 'code' and 'confirmVerificationCodeMutation'. Either include them or remove the dependency array.",["150"],"'useMe' is defined but never used.","React Hook useEffect has a missing dependency: 'triggerMenu'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'data?.me.user?.isVerified', 'history', and 'loading'. Either include them or remove the dependency array.",["152"],["153"],["154"],"'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"155","fix":"156","desc":"157"},{"messageId":"158","fix":"159","desc":"160"},{"messageId":"155","fix":"161","desc":"157"},{"messageId":"158","fix":"162","desc":"160"},{"messageId":"155","fix":"163","desc":"157"},{"messageId":"158","fix":"164","desc":"160"},{"messageId":"155","fix":"165","desc":"157"},{"messageId":"158","fix":"166","desc":"160"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},{"desc":"173","fix":"176"},"removeEscape",{"range":"177","text":"178"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"179","text":"180"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"181","text":"178"},{"range":"182","text":"180"},{"range":"183","text":"178"},{"range":"184","text":"180"},{"range":"185","text":"178"},{"range":"186","text":"180"},"Update the dependencies array to be: [history, userData?.me.user?.isVerified, userLoading]",{"range":"187","text":"188"},"Update the dependencies array to be: [code, confirmVerificationCodeMutation]",{"range":"189","text":"190"},"Update the dependencies array to be: [location, triggerMenu]",{"range":"191","text":"192"},"Update the dependencies array to be: [data?.me.user?.isVerified, history, loading]",{"range":"193","text":"194"},{"range":"195","text":"194"},{"range":"196","text":"194"},[2097,2098],"",[2097,2097],"\\",[2122,2123],[2122,2122],[2231,2232],[2231,2231],[2256,2257],[2256,2256],[1238,1240],"[history, userData?.me.user?.isVerified, userLoading]",[1570,1572],"[code, confirmVerificationCodeMutation]",[2514,2524],"[location, triggerMenu]",[2277,2279],"[data?.me.user?.isVerified, history, loading]",[371,373],[374,376]]