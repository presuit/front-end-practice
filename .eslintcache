[{"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx":"1","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx":"2","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts":"3","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx":"4","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx":"5","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx":"6","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx":"7","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx":"8","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx":"9","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx":"10","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx":"11","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx":"12","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts":"13","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx":"14","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts":"15","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx":"16","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx":"17","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx":"18","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx":"19","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx":"20","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx":"21","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx":"22","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateProduct.tsx":"23","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\FullSizeImgBoard.tsx":"24","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\SellingHistory.tsx":"25","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\BackButton.tsx":"26","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\__generated__\\globalTypes.ts":"27","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\EditProfile.tsx":"28"},{"size":474,"mtime":1610371989440,"results":"29","hashOfConfig":"30"},{"size":410,"mtime":1610937151230,"results":"31","hashOfConfig":"30"},{"size":931,"mtime":1611758381074,"results":"32","hashOfConfig":"30"},{"size":592,"mtime":1610367065748,"results":"33","hashOfConfig":"30"},{"size":2894,"mtime":1611745119857,"results":"34","hashOfConfig":"30"},{"size":4370,"mtime":1611720567598,"results":"35","hashOfConfig":"30"},{"size":5046,"mtime":1611720399755,"results":"36","hashOfConfig":"30"},{"size":668,"mtime":1610891671995,"results":"37","hashOfConfig":"30"},{"size":2437,"mtime":1611638179964,"results":"38","hashOfConfig":"30"},{"size":2333,"mtime":1611721261903,"results":"39","hashOfConfig":"30"},{"size":828,"mtime":1611757537399,"results":"40","hashOfConfig":"30"},{"size":1331,"mtime":1611719675565,"results":"41","hashOfConfig":"30"},{"size":1055,"mtime":1611551730027,"results":"42","hashOfConfig":"30"},{"size":7370,"mtime":1611715905974,"results":"43","hashOfConfig":"30"},{"size":330,"mtime":1611638813089,"results":"44","hashOfConfig":"30"},{"size":12196,"mtime":1611758540624,"results":"45","hashOfConfig":"30"},{"size":420,"mtime":1610628827681,"results":"46","hashOfConfig":"30"},{"size":7551,"mtime":1611745840653,"results":"47","hashOfConfig":"30"},{"size":2514,"mtime":1611721002562,"results":"48","hashOfConfig":"30"},{"size":2024,"mtime":1611148375359,"results":"49","hashOfConfig":"30"},{"size":12552,"mtime":1611719759447,"results":"50","hashOfConfig":"30"},{"size":422,"mtime":1610938247510,"results":"51","hashOfConfig":"30"},{"size":11318,"mtime":1611757951266,"results":"52","hashOfConfig":"30"},{"size":4082,"mtime":1611645197255,"results":"53","hashOfConfig":"30"},{"size":995,"mtime":1611718128697,"results":"54","hashOfConfig":"30"},{"size":600,"mtime":1611717662560,"results":"55","hashOfConfig":"30"},{"size":1379,"mtime":1611757558310,"results":"56","hashOfConfig":"30"},{"size":5479,"mtime":1611755830953,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"6h5vn9",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx",[],["126","127"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx",["128","129","130","131","132"],"import React from \"react\";\r\nimport { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { logIn, logInVariables } from \"../__generated__/logIn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { LogInInput } from \"../__generated__/globalTypes\";\r\nimport { data } from \"autoprefixer\";\r\n\r\nconst LOG_IN_MUTATION = gql`\r\n  mutation logIn($input: LogInInput!) {\r\n    logIn(input: $input) {\r\n      ok\r\n      error\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LogIn = () => {\r\n  const { register, getValues, errors, handleSubmit } = useForm<LogInInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: logIn) => {\r\n    const {\r\n      logIn: { ok, token, error },\r\n    } = data;\r\n\r\n    if (!ok && error) {\r\n      alert(error);\r\n    }\r\n\r\n    if (ok && token) {\r\n      alert(\"로그인 성공!\");\r\n      localStorage.setItem(\"token\", token);\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const onClick = async () => {\r\n    const { email, password } = getValues();\r\n    await logInMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const [logInMutation, { error: mutationError }] = useMutation<\r\n    logIn,\r\n    logInVariables\r\n  >(LOG_IN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  return (\r\n    <div className=\" min-h-screen   flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>로그인 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm  w-full  px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            로그인\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 로그인 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.type === \"pattern\" && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 로그인 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.type === \"required\" && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            로그인\r\n          </button>\r\n          {}\r\n          {mutationError && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {mutationError}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            아직 회원이 아니신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/create-account\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 회원가입 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx",["133","134","135"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { CreateAccountInput } from \"../__generated__/globalTypes\";\r\nimport {\r\n  createAccount,\r\n  createAccountVariables,\r\n} from \"../__generated__/createAccount\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccount($input: CreateAccountInput!) {\r\n    createAccount(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CreateAccount = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n  } = useForm<CreateAccountInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onClick = () => {\r\n    const { email, password, username } = getValues();\r\n    createAccountMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n          username,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const onCompleted = (data: createAccount) => {\r\n    const {\r\n      createAccount: { ok, error },\r\n    } = data;\r\n\r\n    if (!ok && error) {\r\n      alert(error);\r\n    }\r\n\r\n    if (ok) {\r\n      alert(\"회원가입 성공! 로그인 해주세요\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [createAccountMutation, { error }] = useMutation<\r\n    createAccount,\r\n    createAccountVariables\r\n  >(CREATE_ACCOUNT_MUTATION, {\r\n    onCompleted,\r\n  });\r\n\r\n  return (\r\n    <div className=\" min-h-screen  bg-indigo-500 flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>회원가입 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm w-full   px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            회원가입\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 회원가입 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.type === \"pattern\" && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.type === \"required\" && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"닉네임은 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"닉네임\"\r\n            required\r\n          />\r\n          {errors.username?.type === \"required\" && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.username?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.type === \"required\" && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            회원가입\r\n          </button>\r\n          {error && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">{error}</h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            이미 회원이신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 로그인 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx",["136"],"import { gql, useQuery, useReactiveVar } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { ProductGridItem } from \"../components/ProductGridItem\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport {\r\n  allProducts,\r\n  allProductsVariables,\r\n} from \"../__generated__/allProducts\";\r\nimport { PRODUCTS_FRAGMENT } from \"../fragment\";\r\nimport { Menu } from \"../components/Menu\";\r\nimport { currentHomePage } from \"../apollo\";\r\n\r\nconst ALL_PRODUCTS_QUERY = gql`\r\n  query allProducts($input: AllProductsInput!) {\r\n    allProducts(input: $input) {\r\n      ok\r\n      error\r\n      totalResults\r\n      totalPages\r\n      products {\r\n        ...productsParts\r\n      }\r\n    }\r\n  }\r\n\r\n  ${PRODUCTS_FRAGMENT}\r\n`;\r\n\r\nexport const Home = () => {\r\n  const history = useHistory();\r\n  const currentPage = useReactiveVar(currentHomePage);\r\n  const [page, setPage] = useState(currentPage);\r\n  const { data: userData, loading: userLoading } = useMe();\r\n  const {\r\n    data: productsData,\r\n    loading: productsLoading,\r\n    refetch,\r\n    error,\r\n  } = useQuery<allProducts, allProductsVariables>(ALL_PRODUCTS_QUERY, {\r\n    variables: {\r\n      input: {\r\n        page,\r\n      },\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    refetch({ input: { page } });\r\n  }, []);\r\n  if (!userLoading && userData?.me.user?.isVerified === false) {\r\n    history.push(\"/not-valid-user\");\r\n  }\r\n  console.log(productsData, error);\r\n  return (\r\n    <div>\r\n      {!userLoading && userData?.me.user?.isVerified === true && (\r\n        <div>\r\n          <div className=\"max-w-screen-2xl min-h-screen mx-16 2xl:mx-auto pt-10 pb-32 grid  md:grid-cols-4 gap-5 \">\r\n            {!productsLoading &&\r\n              productsData?.allProducts.products?.map((product) => (\r\n                <Link key={product.id} to={`/product/${product.id}`}>\r\n                  <ProductGridItem\r\n                    name={product.name}\r\n                    price={product.price}\r\n                    bigImg={product.bigImg}\r\n                    savedAmount={product.savedAmount}\r\n                  />\r\n                </Link>\r\n              ))}\r\n          </div>\r\n          <Menu\r\n            totalPages={productsData?.allProducts.totalPages}\r\n            totalProducts={productsData?.allProducts.totalResults}\r\n            page={page}\r\n            setPage={setPage}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx",["137"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  confirmVerificationCode,\r\n  confirmVerificationCodeVariables,\r\n} from \"../__generated__/confirmVerificationCode\";\r\n\r\nconst CONFIRM_VALIDATION_CODE_MUTATION = gql`\r\n  mutation confirmVerificationCode($input: ConfirmVerificationCodeInput!) {\r\n    confirmVerificationCode(input: $input) {\r\n      ok\r\n      error\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ValidationCode = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n  const code = location.search.split(\"?code=\")[1];\r\n  const onCompleted = (data: confirmVerificationCode) => {\r\n    const {\r\n      confirmVerificationCode: { ok, userId },\r\n    } = data;\r\n    if (ok && userId) {\r\n      client.writeFragment({\r\n        id: `User:${userId}`,\r\n        fragment: gql`\r\n          fragment UserVerifCodeFragment on User {\r\n            isVerified\r\n          }\r\n        `,\r\n        data: {\r\n          isVerified: true,\r\n        },\r\n      });\r\n      alert(\"성공적으로 인증 되었습니다.\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [confirmVerificationCodeMutation, { loading, data }] = useMutation<\r\n    confirmVerificationCode,\r\n    confirmVerificationCodeVariables\r\n  >(CONFIRM_VALIDATION_CODE_MUTATION, { onCompleted });\r\n  useEffect(() => {\r\n    confirmVerificationCodeMutation({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-indigo-500\">\r\n        {loading && (\r\n          <h1 className=\"text-white font-semibold text-2xl\">Loading...</h1>\r\n        )}\r\n        {!loading && data?.confirmVerificationCode.error && (\r\n          <div className=\"px-5 py-10 flex flex-col justify-center items-center border mx-3 bg-white rounded-xl\">\r\n            <h1 className=\"text-black font-semibold text-2xl\">\r\n              {data?.confirmVerificationCode.error}\r\n            </h1>\r\n            <Link className=\"text-black mt-10 hover:underline\" to=\"/\">\r\n              홈으로 가기\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx",["138","139"],"import React, { useEffect, useRef } from \"react\";\r\nimport { getNameSuppressed, numberWithCommas } from \"../utils\";\r\n\r\ninterface IProps {\r\n  name: string;\r\n  price: number;\r\n  bigImg: string | null;\r\n  savedAmount: number;\r\n}\r\n\r\nexport const ProductGridItem: React.FC<IProps> = ({ bigImg, name, price }) => {\r\n  return (\r\n    <div className=\"w-full h-full  shadow-xl \">\r\n      <div className=\" md:w-full md:h-2/3  rounded-t-lg border-8 border-indigo-900 border-b-0 overflow-hidden\">\r\n        <div\r\n          className=\" bg-center bg-cover md:w-full md:h-full py-32 md:py-0 transform hover:scale-125 transition-transform\"\r\n          style={{\r\n            backgroundImage: `url(${bigImg})`,\r\n            transitionDuration: \"0.5s\",\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"grid grid-cols-2 md:h-1/3 py-10  md:py-0 rounded-b-lg w-full bg-indigo-800 border-8 border-t-0 border-indigo-900\">\r\n        <h1 className=\"text-amber-300 font-semibold  flex justify-center items-center text-xl md:text-base lg:text-xl xl:text-2xl px-3\">\r\n          {getNameSuppressed(name)}\r\n        </h1>\r\n        <h1 className=\"flex justify-center items-center text-amber-300 font-semibold text-xl md:text-base lg:text-xl xl:text-2xl px-3\">\r\n          {numberWithCommas(price)}원\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts",["140","141"],"import { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"./hooks/useMe\";\r\n\r\nconst colors = [\r\n  \"blugGray\",\r\n  \"coolGray\",\r\n  \"trueGray\",\r\n  \"warmGray\",\r\n  \"orange\",\r\n  \"amber\",\r\n  \"lime\",\r\n  \"emerald\",\r\n  \"teal\",\r\n  \"cyan\",\r\n  \"lightBlue\",\r\n  \"violet\",\r\n  \"fuchsia\",\r\n  \"rose\",\r\n];\r\n\r\nexport const pickRandomBgColor = (): string => {\r\n  const index = Math.floor(Math.random() * colors.length);\r\n  return colors[index];\r\n};\r\n\r\nexport const getDate = (dateNumber: number): string => {\r\n  const dateObj = new Date(dateNumber);\r\n  const dateYear = dateObj.getFullYear();\r\n  const dateMonth = dateObj.getMonth() + 1;\r\n  const dateDate = dateObj.getDate();\r\n  return `${dateYear}년 ${dateMonth}월 ${dateDate}일`;\r\n};\r\n\r\nexport const getNameSuppressed = (name: string): string => {\r\n  let newName = name;\r\n  if (name.length > 10) {\r\n    newName = `${name.substr(0, 10)}...`;\r\n  }\r\n  return newName;\r\n};\r\n\r\nexport const numberWithCommas = (price: number) => {\r\n  return price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport {};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx",["142"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faUser,\r\n  faArrowCircleRight,\r\n  faArrowCircleLeft,\r\n  faCommentDots,\r\n  faPlusCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"../styles/animation.css\";\r\nimport { currentHomePage } from \"../apollo\";\r\n\r\ninterface IHomeMenuProps {\r\n  totalPages?: number | null;\r\n  totalProducts?: number | null;\r\n  page?: number | null;\r\n  setPage?: React.Dispatch<React.SetStateAction<number>> | null;\r\n}\r\n\r\nexport const Menu: React.FC<IHomeMenuProps> = ({\r\n  totalPages,\r\n  totalProducts,\r\n  page,\r\n  setPage,\r\n}) => {\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const location = useLocation();\r\n  const menuDiv = useRef<HTMLDivElement>(null);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const triggerMenu = () => {\r\n    if (menuOpen) {\r\n      //  close It!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuSmall\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setMenuOpen((prev) => !prev);\r\n      }\r\n    } else {\r\n      //  Open it!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuBig\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          setMenuOpen((prev) => !prev);\r\n        }, 500);\r\n      }\r\n    }\r\n  };\r\n  const onClickMovePage = (e: any) => {\r\n    if (totalPages && totalProducts && page && setPage) {\r\n      let target = e.target;\r\n      if (e.target.tagName === \"path\") {\r\n        target = e.target.parentNode;\r\n      }\r\n      const targetIconAhead = target.getAttribute(\"data-icon\").split(\"-\")[2];\r\n      if (targetIconAhead === \"right\") {\r\n        if (page < totalPages) {\r\n          setPage((prev) => prev + 1);\r\n          currentHomePage(page + 1);\r\n        }\r\n      }\r\n      if (targetIconAhead === \"left\") {\r\n        if (page > 1) {\r\n          setPage((prev) => prev - 1);\r\n          currentHomePage(page - 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const path = location.pathname;\r\n    if (path === \"/\") {\r\n      setMode(\"home\");\r\n    }\r\n    if (path === \"/me\") {\r\n      setMode(\"me\");\r\n    }\r\n    if (path === \"/messages\") {\r\n      setMode(\"messages\");\r\n    }\r\n    triggerMenu();\r\n  }, [location]);\r\n  return (\r\n    <div className=\" flex justify-center items-center max-w-screen-md  mx-16 md:mx-auto fixed bottom-0 left-0 right-0  \">\r\n      <div\r\n        ref={menuDiv}\r\n        className=\"md:px-12 px-10 py-5 my-5   flex items-center justify-around  shadow-2xl bg-amber-300  rounded-full  \"\r\n      >\r\n        {mode === \"home\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleLeft}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={triggerMenu}\r\n                icon={faHome}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <h1\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow  \"\r\n              >\r\n                {page}\r\n              </h1>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleRight}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to={`/me`}>\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"me\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"messages\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/me\">\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-indigo-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      {mode === \"home\" && (\r\n        <div className=\"fixed bottom-0 right-0\">\r\n          <Link to=\"/product/new\">\r\n            <FontAwesomeIcon\r\n              icon={faPlusCircle}\r\n              className=\"mr-2 md:mr-5 mb-7 2xl:mr-10 text-5xl text-indigo-800 transform hover:scale-125 transition-transform\"\r\n            />\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx",["143","144","145","146","147","148","149","150","151"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx",["152"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\nexport const Messages = () => {\r\n  const history = useHistory();\r\n  const { loading, data } = useMe();\r\n  useEffect(() => {\r\n    if (!loading && data?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n  return <div>물좀 가져옴</div>;\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx",["153","154","155","156","157"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx",["158"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { ConfirmVerificationCodeInput } from \"../__generated__/globalTypes\";\r\n\r\nexport const NotValidUser = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    getValues,\r\n    handleSubmit,\r\n    errors,\r\n  } = useForm<ConfirmVerificationCodeInput>({ mode: \"onChange\" });\r\n  const onClickValidation = () => {\r\n    const { code } = getValues();\r\n    history.push(`/validate-code?code=${code}`);\r\n  };\r\n  const onClickToResetToken = () => {\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/\");\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"min-h-screen flex justify-center items-center bg-indigo-500\">\r\n        <div className=\"max-w-screen-sm w-full mx-10 bg-white shadow-xl rounded-md py-12 px-10 sm:mx-0\">\r\n          <h1 className=\"text-center font-semibold text-2xl\">\r\n            받으신 코드를 입력하고, 서비스를 계속 이용해주세요.\r\n          </h1>\r\n          <form\r\n            onSubmit={handleSubmit(onClickValidation)}\r\n            className=\"w-full mt-5 flex flex-col items-end\"\r\n          >\r\n            <input\r\n              ref={register({\r\n                required: \"코드를 입력해 주세요\",\r\n              })}\r\n              className=\"w-full py-5 px-3 border focus:outline-none focus:border-indigo-600 transition-colors\"\r\n              type=\"text\"\r\n              name=\"code\"\r\n              placeholder=\"코드\"\r\n              required\r\n            />\r\n            {errors.code?.message && (\r\n              <h2 className=\"text-red-500 font-medium text-md my-3\">\r\n                {errors.code?.message}\r\n              </h2>\r\n            )}\r\n            <div className=\"mt-10 grid grid-cols-2 w-full\">\r\n              <Link\r\n                onClick={onClickToResetToken}\r\n                className=\" text-base hover:bg-indigo-500  hover:text-white  border transition-colors flex justify-center items-center p-3\"\r\n                to=\"/\"\r\n              >\r\n                로그인 페이지로 돌아가기\r\n              </Link>\r\n              <button className=\" border  font-medium text-md hover:bg-teal-600 hover:text-white transition-colors flex justify-center items-center p-3 focus:outline-none\">\r\n                확인\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx",["159","160","161","162","163"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { PRODUCTS_FRAGMENT } from \"../fragment\";\r\nimport {\r\n  findProductById,\r\n  findProductByIdVariables,\r\n} from \"../__generated__/findProductById\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getNameSuppressed, numberWithCommas } from \"../utils\";\r\nimport { joinRoom, joinRoomVariables } from \"../__generated__/joinRoom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { PointPercent } from \"../__generated__/globalTypes\";\r\nimport { FullSizeImgBoard } from \"../components/FullSizeImgBoard\";\r\nimport { BackButton } from \"../components/BackButton\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst FIND_PRODUCT_BY_ID_QUERY = gql`\r\n  query findProductById($productId: Float!) {\r\n    findProductById(productId: $productId) {\r\n      ok\r\n      error\r\n      product {\r\n        ...productsParts\r\n        seller {\r\n          id\r\n          username\r\n        }\r\n        buyer {\r\n          id\r\n          username\r\n        }\r\n        room {\r\n          participantCounts\r\n          isMeInRoom\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${PRODUCTS_FRAGMENT}\r\n`;\r\n\r\nconst JOIN_ROOM_MUTATION = gql`\r\n  mutation joinRoom($input: JoinRoomInput!) {\r\n    joinRoom(input: $input) {\r\n      ok\r\n      error\r\n      soldout\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Product = () => {\r\n  const history = useHistory();\r\n  const descriptionContainer = useRef<HTMLHeadingElement>(null);\r\n  const [fullSizeMode, setFullSizeMode] = useState<boolean>(false);\r\n  const { id } = useParams<IParams>();\r\n  const { data: userData, loading: userLoading } = useMe();\r\n  const { loading, data, refetch } = useQuery<\r\n    findProductById,\r\n    findProductByIdVariables\r\n  >(FIND_PRODUCT_BY_ID_QUERY, {\r\n    variables: {\r\n      productId: +id,\r\n    },\r\n  });\r\n\r\n  const onCompleted = (data: joinRoom) => {\r\n    const {\r\n      joinRoom: { ok, error, soldout },\r\n    } = data;\r\n    if (ok) {\r\n      alert(\"성공적으로 등록 되셨습니다.\");\r\n      if (soldout) {\r\n        alert(\r\n          \"상품의 금액 임계점을 넘은 상태이므로 랜덤으로 구매자를 뽑습니다.\"\r\n        );\r\n      }\r\n      refetch({ productId: +id });\r\n    }\r\n    if (!ok && error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const [joinRoomMutation] = useMutation<joinRoom, joinRoomVariables>(\r\n    JOIN_ROOM_MUTATION,\r\n    { onCompleted }\r\n  );\r\n\r\n  const getRoomPrice = (value: PointPercent): number => {\r\n    let percent: number = 1;\r\n    if (data?.findProductById.product?.price) {\r\n      if (value === PointPercent.full) {\r\n        percent = 1;\r\n      }\r\n      if (value === PointPercent.half) {\r\n        percent = 0.5;\r\n      }\r\n      if (value === PointPercent.one) {\r\n        percent = 0.01;\r\n      }\r\n      if (value === PointPercent.ten) {\r\n        percent = 0.1;\r\n      }\r\n      if (value === PointPercent.zeroDotOne) {\r\n        percent = 0.001;\r\n      }\r\n      return Math.ceil(data.findProductById.product.price * percent);\r\n    } else {\r\n      throw Error(\"room Price를 구하지 못했습니다.\");\r\n    }\r\n  };\r\n\r\n  const onClickJoinRoom = async () => {\r\n    if (data?.findProductById.product && userData?.me.user) {\r\n      const joinRoomPrice = getRoomPrice(\r\n        data.findProductById.product.pointPercent\r\n      );\r\n      await joinRoomMutation({\r\n        variables: {\r\n          input: {\r\n            price: joinRoomPrice,\r\n            productId: data.findProductById.product.id,\r\n            userId: userData.me.user?.id,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const onClickToGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const onClickFullSizeImg = () => {\r\n    setFullSizeMode(true);\r\n  };\r\n\r\n  const onClickToRevealAllName = (e: any) => {\r\n    if (data?.findProductById.product?.name) {\r\n      e.target.innerText = data?.findProductById.product?.name;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!userLoading && userData?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    if (data?.findProductById.product?.description) {\r\n      if (descriptionContainer.current) {\r\n        descriptionContainer.current.innerHTML =\r\n          data.findProductById.product.description;\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (data?.findProductById.error) {\r\n    return (\r\n      <div className=\"w-full h-screen flex flex-col justify-center items-center\">\r\n        <h1 className=\"text-amber-300 text-3xl font-bold\">\r\n          {data?.findProductById.error}\r\n        </h1>\r\n        <Link className=\"mt-10 text-gray-200 hover:underline text-xl\" to=\"/\">\r\n          홈으로 돌아가기\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <div>\r\n      {/* 뒤로 가기 버튼 */}\r\n      <BackButton />\r\n      {data?.findProductById.product?.detailImgs && (\r\n        <FullSizeImgBoard\r\n          fullSizeMode={fullSizeMode}\r\n          setFullSizeMode={setFullSizeMode}\r\n          detailImgs={data?.findProductById.product?.detailImgs}\r\n        />\r\n      )}\r\n      {/* 메인 프레임  */}\r\n      <div className=\"max-w-screen-2xl min-h-screen mx-12 2xl:mx-auto shadow-2xl bg-indigo-500\">\r\n        {/* 프로덕트 페이지  최상단에 위치한 상품 사진 및 정보 컴포넌트 */}\r\n        <div className=\" grid grid-rows-2  md:grid-cols-2 md:grid-rows-1  pt-10 mx-5  shadow-xl \">\r\n          {/* 프로덕트 사진 */}\r\n          <div className=\" w-full h-full md:rounded-l-2xl md:rounded-t-none rounded-t-2xl border-8 border-indigo-900 overflow-hidden  \">\r\n            <div\r\n              onClick={onClickFullSizeImg}\r\n              className=\"w-full h-full bg-cover bg-center transform hover:scale-110 transition-transform cursor-pointer z-0\"\r\n              style={{\r\n                backgroundImage: `url(${data?.findProductById.product?.bigImg})`,\r\n                transitionDuration: \"0.6s\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n          {/* 프로덕트 디테일 정보 */}\r\n          <div className=\" w-full h-full bg-indigo-700 text-amber-300 grid grid-cols-2 md:rounded-r-2xl md:rounded-b-none rounded-b-2xl border-8 border-indigo-900 md:border-l-0 border-t-0 md:border-t-8\">\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center border-r border-b border-indigo-500 p-3 \">\r\n              <span>📦</span>\r\n              {data?.findProductById.product?.name && (\r\n                <div>\r\n                  {getNameSuppressed(\r\n                    data.findProductById.product.name\r\n                  ).includes(\"...\") ? (\r\n                    <>\r\n                      <span\r\n                        onClick={onClickToRevealAllName}\r\n                        className=\"hover:underline\"\r\n                      >\r\n                        {getNameSuppressed(data.findProductById.product.name)}\r\n                      </span>\r\n                    </>\r\n                  ) : (\r\n                    <span>{data.findProductById.product.name}</span>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </h1>\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center border-b border-indigo-500 p-3\">\r\n              <span>💲</span>\r\n              {data?.findProductById.product?.price ? (\r\n                <span>\r\n                  {numberWithCommas(data?.findProductById.product?.price)}원\r\n                </span>\r\n              ) : (\r\n                <span>가격이 정해지지 않았습니다.</span>\r\n              )}\r\n              {data?.findProductById.product?.pointPercent && (\r\n                <span className=\"text-xs md:text-base mt-3\">\r\n                  (응모당{\" \"}\r\n                  {numberWithCommas(\r\n                    getRoomPrice(data.findProductById.product.pointPercent)\r\n                  )}\r\n                  원)\r\n                </span>\r\n              )}\r\n            </h1>\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center border-r border-indigo-500 p-3 border-b\">\r\n              <span>🛒</span>\r\n              <Link to={`/category/slug`} className=\"hover:underline\">\r\n                {data?.findProductById.product?.category.slug}\r\n              </Link>\r\n            </h1>\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center p-3 border-b border-indigo-500\">\r\n              <span>👨‍👧‍👧</span>\r\n              <span>\r\n                {data?.findProductById.product?.room?.participantCounts}\r\n              </span>\r\n            </h1>\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center p-3 border-r border-indigo-500\">\r\n              <span className=\"text-xs md:text-lg\">판매자</span>\r\n              <span>\r\n                <Link\r\n                  className=\"hover:underline\"\r\n                  to={`/users/${data?.findProductById.product?.seller.id}`}\r\n                >\r\n                  {data?.findProductById.product?.seller.username}\r\n                </Link>\r\n              </span>\r\n            </h1>\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center p-3\">\r\n              <span className=\"text-xs md:text-lg\">구매자</span>\r\n              {data?.findProductById.product?.buyer ? (\r\n                <span>\r\n                  <Link\r\n                    className=\"hover:underline\"\r\n                    to={`/users/${data?.findProductById.product?.buyer.id}`}\r\n                  >\r\n                    {data.findProductById.product.buyer.username}\r\n                  </Link>\r\n                </span>\r\n              ) : (\r\n                <span className=\"text-lg\">구매자가 아직 없습니다.</span>\r\n              )}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 프로덕트 모인 금액과 참가하는 버튼이 존재하는 부분 */}\r\n        <div className=\"mt-10 mx-5 grid grid-cols-2  \">\r\n          <div className=\"py-5 px-3 bg-indigo-700 text-center font-semibold text-base md:text-xl text-gray-200 rounded-l-2xl   focus:outline-none w-full h-full flex justify-center items-center\">\r\n            {data?.findProductById.product?.soldout ? (\r\n              <span>soldout!</span>\r\n            ) : (\r\n              <>\r\n                {\" \"}\r\n                <span>현재까지 </span>\r\n                <span className=\"text-amber-300\">\r\n                  {numberWithCommas(\r\n                    data?.findProductById.product?.savedAmount || 0\r\n                  )}\r\n                  원\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"w-full h-full flex justify-center items-center\">\r\n            {data?.findProductById.product?.room?.isMeInRoom ? (\r\n              <button className=\"py-5 px-3 bg-teal-500 rounded-r-2xl focus:outline-none font-semibold text-base md:text-xl text-amber-300 transition-colors  cursor-not-allowed w-full \">\r\n                이미 참여하셨습니다.\r\n              </button>\r\n            ) : (\r\n              <>\r\n                {data?.findProductById.product?.soldout ? (\r\n                  <button className=\"py-5 px-3 bg-teal-500 rounded-r-2xl focus:outline-none font-semibold text-base md:text-xl text-amber-300 transition-colors  cursor-not-allowed w-full \">\r\n                    SoldOut!\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    onClick={onClickJoinRoom}\r\n                    className=\"py-5 px-3 bg-teal-500 rounded-r-2xl focus:outline-none font-semibold text-base md:text-xl text-gray-200 hover:text-amber-300 transition-colors focus:ring-4 ring-teal-600 w-full \"\r\n                  >\r\n                    참가하기\r\n                  </button>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* 프로덕트 세부 설명 컴포넌트 */}\r\n        <div className=\"mt-10 mx-5 pb-10\">\r\n          <h1\r\n            ref={descriptionContainer}\r\n            className=\"bg-gray-200 py-16 px-5 rounded-2xl shadow-2xl md:text-xl\"\r\n          ></h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateProduct.tsx",["164","165","166","167"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\FullSizeImgBoard.tsx",["168"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronRight,\r\n  faChevronLeft,\r\n  faTimes,\r\n  faCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface IProps {\r\n  detailImgs: { source: string }[];\r\n  fullSizeMode: boolean;\r\n  setFullSizeMode: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const FullSizeImgBoard: React.FC<IProps> = ({\r\n  detailImgs,\r\n  fullSizeMode,\r\n  setFullSizeMode,\r\n}) => {\r\n  const [imgIndex, setImgIndex] = useState<number>(0);\r\n\r\n  const onClickToExit = () => {\r\n    setFullSizeMode(false);\r\n  };\r\n\r\n  const onClickToLeft = () => {\r\n    let _index = imgIndex;\r\n    const prevImgPagination = document.getElementById(`imgPagination${_index}`);\r\n    let nextImgPagination: HTMLElement | null;\r\n\r\n    if (imgIndex === 0) {\r\n      setImgIndex(detailImgs.length - 1);\r\n      _index = detailImgs.length - 1;\r\n    } else {\r\n      setImgIndex((prev) => prev - 1);\r\n      _index -= 1;\r\n    }\r\n\r\n    nextImgPagination = document.getElementById(`imgPagination${_index}`);\r\n\r\n    if (prevImgPagination) {\r\n      prevImgPagination.style.color = \"black\";\r\n    }\r\n\r\n    if (nextImgPagination) {\r\n      nextImgPagination.style.color = \"rgba(252, 211, 77, 1)\";\r\n    }\r\n  };\r\n\r\n  const onClickToRight = () => {\r\n    let _index = imgIndex;\r\n    const prevImgPagination = document.getElementById(`imgPagination${_index}`);\r\n    let nextImgPagination: HTMLElement | null;\r\n\r\n    if (imgIndex === detailImgs.length - 1) {\r\n      _index = 0;\r\n      setImgIndex(0);\r\n    } else {\r\n      setImgIndex((prev) => prev + 1);\r\n      _index += 1;\r\n    }\r\n\r\n    nextImgPagination = document.getElementById(`imgPagination${_index}`);\r\n\r\n    if (prevImgPagination) {\r\n      prevImgPagination.style.color = \"black\";\r\n    }\r\n\r\n    if (nextImgPagination) {\r\n      nextImgPagination.style.color = \"rgba(252, 211, 77, 1)\";\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fullSizeImgBoard = document.getElementById(\"fullSizeImgBoard\");\r\n    if (fullSizeImgBoard) {\r\n      if (fullSizeMode) {\r\n        fullSizeImgBoard.style.visibility = \"visible\";\r\n        fullSizeImgBoard.style.opacity = \"1\";\r\n        fullSizeImgBoard.style.zIndex = \"50\";\r\n      } else {\r\n        fullSizeImgBoard.style.visibility = \"hidden\";\r\n        fullSizeImgBoard.style.opacity = \"0\";\r\n        fullSizeImgBoard.style.zIndex = \"0\";\r\n      }\r\n    }\r\n  }, [fullSizeMode]);\r\n\r\n  useEffect(() => {\r\n    const imgPagination = document.getElementById(`imgPagination0`);\r\n    if (imgPagination) {\r\n      imgPagination.style.color = \"rgba(252, 211, 77, 1)\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"fullSizeImgBoard\"\r\n      className=\"z-0 overflow-hidden w-full h-screen fixed top-0 left-0 bg-gray-800 flex justify-center items-center opacity-0 \"\r\n    >\r\n      <img\r\n        src={detailImgs[imgIndex].source}\r\n        className=\"max-w-full max-h-full\"\r\n        alt=\"Img\"\r\n        title=\"Img\"\r\n      />\r\n      {detailImgs && detailImgs.length !== 0 && (\r\n        <div className=\"bg-transparent py-5 px-3 flex justify-center items-center absolute bottom-0 left-0 right-0 mx-auto flex-wrap\">\r\n          {detailImgs.map((eachImg, index) => (\r\n            <FontAwesomeIcon\r\n              key={index}\r\n              id={`imgPagination${index}`}\r\n              icon={faCircle}\r\n              className=\"text-base md:text-xl text-black mx-5 my-3\"\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n      <FontAwesomeIcon\r\n        icon={faChevronLeft}\r\n        onClick={onClickToLeft}\r\n        className=\"absolute top-0 bottom-0 left-0 my-auto text-5xl mx-5 text-amber-300 cursor-pointer\"\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faChevronRight}\r\n        onClick={onClickToRight}\r\n        className=\"absolute top-0 bottom-0 right-0 my-auto text-5xl mx-5 text-amber-300 cursor-pointer\"\r\n      />\r\n      <FontAwesomeIcon\r\n        onClick={onClickToExit}\r\n        icon={faTimes}\r\n        className=\"absolute top-0 right-0 text-5xl text-amber-300 mx-5 my-5 cursor-pointer\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\SellingHistory.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\BackButton.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\__generated__\\globalTypes.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\EditProfile.tsx",["169","170","171","172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":2,"column":15,"nodeType":"180","messageId":"181","endLine":2,"endColumn":30},{"ruleId":"178","severity":1,"message":"182","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":20},{"ruleId":"178","severity":1,"message":"183","line":9,"column":10,"nodeType":"180","messageId":"181","endLine":9,"endColumn":14},{"ruleId":"184","severity":1,"message":"185","line":74,"column":34,"nodeType":"186","messageId":"187","endLine":74,"endColumn":35,"suggestions":"188"},{"ruleId":"184","severity":1,"message":"185","line":74,"column":59,"nodeType":"186","messageId":"187","endLine":74,"endColumn":60,"suggestions":"189"},{"ruleId":"178","severity":1,"message":"182","line":5,"column":10,"nodeType":"180","messageId":"181","endLine":5,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":82,"column":34,"nodeType":"186","messageId":"187","endLine":82,"endColumn":35,"suggestions":"190"},{"ruleId":"184","severity":1,"message":"185","line":82,"column":59,"nodeType":"186","messageId":"187","endLine":82,"endColumn":60,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":49,"column":6,"nodeType":"194","endLine":49,"endColumn":8,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":56,"column":6,"nodeType":"194","endLine":56,"endColumn":8,"suggestions":"197"},{"ruleId":"178","severity":1,"message":"198","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"199","line":1,"column":28,"nodeType":"180","messageId":"181","endLine":1,"endColumn":34},{"ruleId":"178","severity":1,"message":"200","line":1,"column":10,"nodeType":"180","messageId":"181","endLine":1,"endColumn":20},{"ruleId":"178","severity":1,"message":"201","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":15},{"ruleId":"192","severity":1,"message":"202","line":94,"column":6,"nodeType":"194","endLine":94,"endColumn":16,"suggestions":"203"},{"ruleId":"178","severity":1,"message":"204","line":11,"column":3,"nodeType":"180","messageId":"181","endLine":11,"endColumn":9},{"ruleId":"178","severity":1,"message":"205","line":13,"column":3,"nodeType":"180","messageId":"181","endLine":13,"endColumn":9},{"ruleId":"178","severity":1,"message":"206","line":16,"column":29,"nodeType":"180","messageId":"181","endLine":16,"endColumn":37},{"ruleId":"178","severity":1,"message":"207","line":21,"column":3,"nodeType":"180","messageId":"181","endLine":21,"endColumn":15},{"ruleId":"178","severity":1,"message":"208","line":22,"column":3,"nodeType":"180","messageId":"181","endLine":22,"endColumn":24},{"ruleId":"178","severity":1,"message":"209","line":29,"column":10,"nodeType":"180","messageId":"181","endLine":29,"endColumn":17},{"ruleId":"178","severity":1,"message":"210","line":62,"column":16,"nodeType":"180","messageId":"181","endLine":62,"endColumn":32},{"ruleId":"192","severity":1,"message":"211","line":125,"column":6,"nodeType":"194","endLine":125,"endColumn":12,"suggestions":"212"},{"ruleId":"192","severity":1,"message":"213","line":136,"column":6,"nodeType":"194","endLine":136,"endColumn":8,"suggestions":"214"},{"ruleId":"192","severity":1,"message":"215","line":12,"column":6,"nodeType":"194","endLine":12,"endColumn":8,"suggestions":"216"},{"ruleId":"178","severity":1,"message":"217","line":4,"column":3,"nodeType":"180","messageId":"181","endLine":4,"endColumn":10},{"ruleId":"178","severity":1,"message":"204","line":5,"column":3,"nodeType":"180","messageId":"181","endLine":5,"endColumn":9},{"ruleId":"178","severity":1,"message":"218","line":6,"column":3,"nodeType":"180","messageId":"181","endLine":6,"endColumn":10},{"ruleId":"192","severity":1,"message":"211","line":101,"column":6,"nodeType":"194","endLine":101,"endColumn":22,"suggestions":"219"},{"ruleId":"192","severity":1,"message":"211","line":107,"column":6,"nodeType":"194","endLine":107,"endColumn":16,"suggestions":"220"},{"ruleId":"178","severity":1,"message":"182","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":20},{"ruleId":"178","severity":1,"message":"221","line":10,"column":10,"nodeType":"180","messageId":"181","endLine":10,"endColumn":25},{"ruleId":"178","severity":1,"message":"222","line":11,"column":10,"nodeType":"180","messageId":"181","endLine":11,"endColumn":21},{"ruleId":"178","severity":1,"message":"223","line":135,"column":9,"nodeType":"180","messageId":"181","endLine":135,"endColumn":24},{"ruleId":"192","severity":1,"message":"224","line":153,"column":6,"nodeType":"194","endLine":153,"endColumn":16,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":335,"column":11,"nodeType":"228","endLine":338,"endColumn":12},{"ruleId":"178","severity":1,"message":"229","line":58,"column":9,"nodeType":"180","messageId":"181","endLine":58,"endColumn":15},{"ruleId":"178","severity":1,"message":"230","line":76,"column":46,"nodeType":"180","messageId":"181","endLine":76,"endColumn":52},{"ruleId":"192","severity":1,"message":"231","line":83,"column":6,"nodeType":"194","endLine":83,"endColumn":8,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":211,"column":17,"nodeType":"228","endLine":214,"endColumn":19},{"ruleId":"178","severity":1,"message":"199","line":1,"column":21,"nodeType":"180","messageId":"181","endLine":1,"endColumn":27},{"ruleId":"178","severity":1,"message":"183","line":4,"column":10,"nodeType":"180","messageId":"181","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"235","line":36,"column":36,"nodeType":"180","messageId":"181","endLine":36,"endColumn":47},{"ruleId":"192","severity":1,"message":"236","line":113,"column":6,"nodeType":"194","endLine":113,"endColumn":16,"suggestions":"237"},{"ruleId":"233","severity":1,"message":"234","line":125,"column":15,"nodeType":"228","endLine":125,"endColumn":76},{"ruleId":"233","severity":1,"message":"234","line":128,"column":15,"nodeType":"228","endLine":131,"endColumn":17},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"@typescript-eslint/no-unused-vars","'useApolloClient' is defined but never used.","Identifier","unusedVar","'isLoggedIn' is defined but never used.","'data' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["240","241"],["242","243"],["244","245"],["246","247"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page' and 'refetch'. Either include them or remove the dependency array.","ArrayExpression",["248"],"React Hook useEffect has missing dependencies: 'code' and 'confirmVerificationCodeMutation'. Either include them or remove the dependency array.",["249"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useHistory' is defined but never used.","'useMe' is defined but never used.","React Hook useEffect has a missing dependency: 'triggerMenu'. Either include it or remove the dependency array.",["250"],"'faPlus' is defined but never used.","'faEdit' is defined but never used.","'useQuery' is defined but never used.","'findUserById' is defined but never used.","'findUserByIdVariables' is defined but never used.","'useForm' is defined but never used.","'refetchSellingPH' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'data?.me.user?.id', 'refetch', 'refetchMe', and 'sellingProductHistoryQuery'. Either include them or remove the dependency array.",["252"],"React Hook useEffect has missing dependencies: 'data?.me.user?.isVerified', 'history', and 'loading'. Either include them or remove the dependency array.",["253"],"'faCheck' is defined but never used.","'faTimes' is defined but never used.",["254"],["255"],"'FontAwesomeIcon' is defined but never used.","'faArrowLeft' is defined but never used.","'onClickToGoBack' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'userLoading'. Either include them or remove the dependency array.",["256"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'client' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'userData?.me.user?.isVerified', and 'userLoading'. Either include them or remove the dependency array.",["257"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'userLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'id', and 'setValue'. Either include them or remove the dependency array.",["258"],"no-global-assign","no-unsafe-negation",{"messageId":"259","fix":"260","desc":"261"},{"messageId":"262","fix":"263","desc":"264"},{"messageId":"259","fix":"265","desc":"261"},{"messageId":"262","fix":"266","desc":"264"},{"messageId":"259","fix":"267","desc":"261"},{"messageId":"262","fix":"268","desc":"264"},{"messageId":"259","fix":"269","desc":"261"},{"messageId":"262","fix":"270","desc":"264"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},"removeEscape",{"range":"293","text":"294"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"295","text":"296"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"297","text":"294"},{"range":"298","text":"296"},{"range":"299","text":"294"},{"range":"300","text":"296"},{"range":"301","text":"294"},{"range":"302","text":"296"},"Update the dependencies array to be: [page, refetch]",{"range":"303","text":"304"},"Update the dependencies array to be: [code, confirmVerificationCodeMutation]",{"range":"305","text":"306"},"Update the dependencies array to be: [location, triggerMenu]",{"range":"307","text":"308"},"Update the dependencies array to be: [data, history]",{"range":"309","text":"310"},"Update the dependencies array to be: [data?.me.user?.id, refetch, refetchMe, sellingProductHistoryQuery]",{"range":"311","text":"312"},"Update the dependencies array to be: [data?.me.user?.isVerified, history, loading]",{"range":"313","text":"314"},"Update the dependencies array to be: [userData, data, history]",{"range":"315","text":"316"},"Update the dependencies array to be: [history, userData]",{"range":"317","text":"318"},"Update the dependencies array to be: [history, userData, userLoading]",{"range":"319","text":"320"},"Update the dependencies array to be: [history, userData?.me.user?.isVerified, userLoading]",{"range":"321","text":"322"},"Update the dependencies array to be: [history, id, setValue, userData]",{"range":"323","text":"324"},[2167,2168],"",[2167,2167],"\\",[2192,2193],[2192,2192],[2276,2277],[2276,2276],[2301,2302],[2301,2301],[1317,1319],"[page, refetch]",[1570,1572],"[code, confirmVerificationCodeMutation]",[2653,2663],"[location, triggerMenu]",[3608,3614],"[data, history]",[3871,3873],"[data?.me.user?.id, refetch, refetchMe, sellingProductHistoryQuery]",[371,373],"[data?.me.user?.isVerified, history, loading]",[2961,2977],"[userData, data, history]",[3108,3118],"[history, userData]",[4145,4155],"[history, userData, userLoading]",[2351,2353],"[history, userData?.me.user?.isVerified, userLoading]",[3384,3394],"[history, id, setValue, userData]"]