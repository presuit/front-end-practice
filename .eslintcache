[{"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx":"1","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx":"2","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts":"3","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx":"4","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx":"5","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx":"6","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx":"7","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx":"8","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx":"9","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx":"10","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx":"11","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx":"12","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts":"13","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx":"14","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts":"15","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx":"16","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx":"17","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx":"18","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx":"19","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx":"20","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx":"21","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx":"22","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateProduct.tsx":"23"},{"size":474,"mtime":1610371989440,"results":"24","hashOfConfig":"25"},{"size":410,"mtime":1610937151230,"results":"26","hashOfConfig":"25"},{"size":813,"mtime":1611148493458,"results":"27","hashOfConfig":"25"},{"size":592,"mtime":1610367065748,"results":"28","hashOfConfig":"25"},{"size":2981,"mtime":1611149447385,"results":"29","hashOfConfig":"25"},{"size":4259,"mtime":1610891672023,"results":"30","hashOfConfig":"25"},{"size":5035,"mtime":1610891672023,"results":"31","hashOfConfig":"25"},{"size":668,"mtime":1610891671995,"results":"32","hashOfConfig":"25"},{"size":2384,"mtime":1611149744161,"results":"33","hashOfConfig":"25"},{"size":2214,"mtime":1610891670955,"results":"34","hashOfConfig":"25"},{"size":776,"mtime":1610633602550,"results":"35","hashOfConfig":"25"},{"size":1101,"mtime":1611223313672,"results":"36","hashOfConfig":"25"},{"size":929,"mtime":1611321140642,"results":"37","hashOfConfig":"25"},{"size":7323,"mtime":1611149349004,"results":"38","hashOfConfig":"25"},{"size":260,"mtime":1610939999423,"results":"39","hashOfConfig":"25"},{"size":9361,"mtime":1611149767416,"results":"40","hashOfConfig":"25"},{"size":420,"mtime":1610628827681,"results":"41","hashOfConfig":"25"},{"size":418,"mtime":1610628902106,"results":"42","hashOfConfig":"25"},{"size":1875,"mtime":1610891671996,"results":"43","hashOfConfig":"25"},{"size":2024,"mtime":1611148375359,"results":"44","hashOfConfig":"25"},{"size":6496,"mtime":1611223119407,"results":"45","hashOfConfig":"25"},{"size":422,"mtime":1610938247510,"results":"46","hashOfConfig":"25"},{"size":6194,"mtime":1611321859082,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"6h5vn9",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\index.tsx",[],["105","106"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\App.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\apollo.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedOutRouter.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoggedInRouter.tsx",["107","108","109"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport { Home } from \"../pages/Home\";\r\nimport { Me } from \"../pages/Me\";\r\nimport { Messages } from \"../pages/Messages\";\r\nimport { UserProfile } from \"../pages/UserProfile\";\r\nimport { ValidationCode } from \"../pages/ValidateCode\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"../styles/animation.css\";\r\nimport { NotValidUser } from \"../pages/NotValidUser\";\r\nimport { Product } from \"../pages/Product\";\r\nimport { LoadingSpinner } from \"./LoadingSpinner\";\r\nimport { CreateProduct } from \"../pages/CreateProduct\";\r\n\r\nexport const LoggedInRouter = () => {\r\n  const { loading, error } = useMe();\r\n  const onClickToRestart = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n    window.location.href = \"/\";\r\n    window.location.reload();\r\n  };\r\n  if (!loading && error) {\r\n    return (\r\n      <>\r\n        <div className=\"h-screen flex flex-col items-center justify-center  px-16\">\r\n          <h1 className=\"text-5xl font-bold text-red-500\">유저 에러 발생!</h1>\r\n          <h3 className=\"mt-10 text-3xl font-medium text-white\">\r\n            유저 토큰에 문제가 생겼습니다.\r\n          </h3>\r\n          <h3 className=\"mt-10 text-3xl font-medium text-white\">\r\n            다시 로그인 해주세요.\r\n          </h3>\r\n\r\n          <button\r\n            onClick={onClickToRestart}\r\n            className=\"mt-10 py-5 px-5 ring-4 ring-indigo-600  focus:outline-none rounded-lg shadow-lg text-white \"\r\n          >\r\n            다시 로그인하기\r\n          </button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  const routes = [\r\n    {\r\n      path: \"/\",\r\n      component: Home,\r\n      exact: true,\r\n    },\r\n    {\r\n      path: \"/not-valid-user\",\r\n      component: NotValidUser,\r\n    },\r\n    {\r\n      path: \"/validate-code\",\r\n      component: ValidationCode,\r\n    },\r\n    {\r\n      path: \"/me\",\r\n      component: Me,\r\n    },\r\n    {\r\n      path: \"/users/:id\",\r\n      component: UserProfile,\r\n    },\r\n    {\r\n      path: \"/messages\",\r\n      component: Messages,\r\n    },\r\n\r\n    {\r\n      path: \"/category/:slug\",\r\n      component: Home,\r\n    },\r\n    {\r\n      path: \"/product/new\",\r\n      component: CreateProduct,\r\n    },\r\n    {\r\n      path: \"/product/:id\",\r\n      component: Product,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {routes.map((route, index) => (\r\n          <Route\r\n            key={index}\r\n            path={route.path}\r\n            component={route.component}\r\n            exact={route.exact}\r\n          />\r\n        ))}\r\n        <Route>\r\n          <Redirect to={\"/\"} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\LogIn.tsx",["110","111","112","113"],"import React from \"react\";\r\nimport { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { logIn, logInVariables } from \"../__generated__/logIn\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { LogInInput } from \"../__generated__/globalTypes\";\r\n\r\nconst LOG_IN_MUTATION = gql`\r\n  mutation logIn($input: LogInInput!) {\r\n    logIn(input: $input) {\r\n      ok\r\n      error\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LogIn = () => {\r\n  const { register, getValues, errors, handleSubmit } = useForm<LogInInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onCompleted = (data: logIn) => {\r\n    const {\r\n      logIn: { ok, token },\r\n    } = data;\r\n\r\n    if (ok && token) {\r\n      console.log(token);\r\n      localStorage.setItem(\"token\", token);\r\n      isLoggedIn(true);\r\n      window.location.reload();\r\n    }\r\n  };\r\n  const onClick = () => {\r\n    const { email, password } = getValues();\r\n    logInMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const [logInMutation, { data, error: mutationError }] = useMutation<\r\n    logIn,\r\n    logInVariables\r\n  >(LOG_IN_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  return (\r\n    <div className=\" min-h-screen   flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>로그인 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm  w-full  px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            로그인\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 로그인 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.types?.pattern && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 로그인 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            로그인\r\n          </button>\r\n          {mutationError && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {mutationError.message}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            아직 회원이 아니신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/create-account\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 회원가입 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateAccount.tsx",["114","115","116"],"import React from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { isLoggedIn } from \"../apollo\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { CreateAccountInput } from \"../__generated__/globalTypes\";\r\nimport {\r\n  createAccount,\r\n  createAccountVariables,\r\n} from \"../__generated__/createAccount\";\r\n\r\nconst CREATE_ACCOUNT_MUTATION = gql`\r\n  mutation createAccount($input: CreateAccountInput!) {\r\n    createAccount(input: $input) {\r\n      ok\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CreateAccount = () => {\r\n  const history = useHistory();\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n  } = useForm<CreateAccountInput>({\r\n    mode: \"onChange\",\r\n  });\r\n  const onClick = () => {\r\n    const { email, password, username } = getValues();\r\n    createAccountMutation({\r\n      variables: {\r\n        input: {\r\n          email,\r\n          password,\r\n          username,\r\n        },\r\n      },\r\n    });\r\n  };\r\n  const onCompleted = (data: createAccount) => {\r\n    const {\r\n      createAccount: { ok },\r\n    } = data;\r\n\r\n    if (ok) {\r\n      alert(\"회원가입 성공! 로그인 해주세요\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [createAccountMutation, { data }] = useMutation<\r\n    createAccount,\r\n    createAccountVariables\r\n  >(CREATE_ACCOUNT_MUTATION, {\r\n    onCompleted,\r\n  });\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\" min-h-full  bg-indigo-500 flex items-center justify-center\">\r\n      <Helmet>\r\n        <title>회원가입 | front-end-practice</title>\r\n      </Helmet>\r\n      <div className=\" max-w-screen-sm w-full   px-10 pt-10  pb-5  shadow-xl bg-white rounded-md  mx-10 \">\r\n        <form\r\n          onSubmit={handleSubmit(onClick)}\r\n          className=\"flex flex-col w-full \"\r\n        >\r\n          <h2 className=\"mb-5 text-center font-semibold text-2xl text-indigo-600\">\r\n            회원가입\r\n          </h2>\r\n          <input\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"이메일은 회원가입 하는데 필수적인 요소입니다.\",\r\n              pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            })}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"이메일\"\r\n            required\r\n          />\r\n          {errors.email?.types?.pattern && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              이메일 형식이 잘못되었습니다.\r\n            </h4>\r\n          )}\r\n          {errors.email?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.email?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"닉네임은 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"닉네임\"\r\n            required\r\n          />\r\n          {errors.username?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.username?.message}\r\n            </h4>\r\n          )}\r\n          <input\r\n            className=\"py-5 px-3  mb-3 w-full focus:outline-none border border-black focus:border-indigo-600 transition-colors\"\r\n            ref={register({\r\n              required: \"비밀번호는 회원가입 하는데 필수적인 요소입니다.\",\r\n            })}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n          {errors.password?.message && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {errors.password?.message}\r\n            </h4>\r\n          )}\r\n          <button\r\n            className=\"py-5 px-3  w-full  mb-3 focus:outline-none border border-black hover:bg-indigo-700 hover:text-white transition-colors\"\r\n            type=\"submit\"\r\n          >\r\n            회원가입\r\n          </button>\r\n          {data?.createAccount.error && (\r\n            <h4 className=\"text-red-500 font-medium text-md my-3\">\r\n              {data?.createAccount.error}\r\n            </h4>\r\n          )}\r\n        </form>\r\n        <div>\r\n          <h3 className=\"text-center\">\r\n            이미 회원이신가요?{\" \"}\r\n            <Link\r\n              className=\"text-indigo-700 font-semibold hover:underline\"\r\n              to=\"/\"\r\n            >\r\n              여기\r\n            </Link>\r\n            를 눌러 로그인 하세요!\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotFound.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Home.tsx",["117"],"import { gql, useQuery, useReactiveVar } from \"@apollo/client\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { ProductGridItem } from \"../components/ProductGridItem\";\r\nimport { useMe } from \"../hooks/useMe\";\r\nimport {\r\n  allProducts,\r\n  allProductsVariables,\r\n} from \"../__generated__/allProducts\";\r\nimport { PRODUCTS_FRAGMENT } from \"../fragment\";\r\nimport { Menu } from \"../components/Menu\";\r\nimport { currentHomePage } from \"../apollo\";\r\n\r\nconst ALL_PRODUCTS_QUERY = gql`\r\n  query allProducts($input: AllProductsInput!) {\r\n    allProducts(input: $input) {\r\n      ok\r\n      error\r\n      totalResults\r\n      totalPages\r\n      products {\r\n        ...productsParts\r\n      }\r\n    }\r\n  }\r\n\r\n  ${PRODUCTS_FRAGMENT}\r\n`;\r\n\r\nexport const Home = () => {\r\n  const history = useHistory();\r\n  const currentPage = useReactiveVar(currentHomePage);\r\n  const [page, setPage] = useState(currentPage);\r\n  const { data: userData, loading: userLoading } = useMe();\r\n  const { data: productsData, loading: productsLoading, refetch } = useQuery<\r\n    allProducts,\r\n    allProductsVariables\r\n  >(ALL_PRODUCTS_QUERY, {\r\n    variables: {\r\n      input: {\r\n        page,\r\n      },\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    refetch({ input: { page } });\r\n  }, []);\r\n  if (!userLoading && userData?.me.user?.isVerified === false) {\r\n    history.push(\"/not-valid-user\");\r\n  }\r\n  return (\r\n    <div>\r\n      {!userLoading && userData?.me.user?.isVerified === true && (\r\n        <div>\r\n          <div className=\"max-w-screen-2xl min-h-screen mx-16 2xl:mx-auto pt-10 pb-32 grid  md:grid-cols-4 gap-5 \">\r\n            {!productsLoading &&\r\n              productsData?.allProducts.products?.map((product) => (\r\n                <Link key={product.id} to={`/product/${product.id}`}>\r\n                  <ProductGridItem\r\n                    name={product.name}\r\n                    price={product.price}\r\n                    bigImg={product.bigImg}\r\n                    savedAmount={product.savedAmount}\r\n                  />\r\n                </Link>\r\n              ))}\r\n          </div>\r\n          <Menu\r\n            totalPages={productsData?.allProducts.totalPages}\r\n            totalProducts={productsData?.allProducts.totalResults}\r\n            page={page}\r\n            setPage={setPage}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\ValidateCode.tsx",["118"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  confirmVerificationCode,\r\n  confirmVerificationCodeVariables,\r\n} from \"../__generated__/confirmVerificationCode\";\r\n\r\nconst CONFIRM_VALIDATION_CODE_MUTATION = gql`\r\n  mutation confirmVerificationCode($input: ConfirmVerificationCodeInput!) {\r\n    confirmVerificationCode(input: $input) {\r\n      ok\r\n      error\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ValidationCode = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const client = useApolloClient();\r\n  const code = location.search.split(\"?code=\")[1];\r\n  const onCompleted = (data: confirmVerificationCode) => {\r\n    const {\r\n      confirmVerificationCode: { ok, userId },\r\n    } = data;\r\n    if (ok && userId) {\r\n      client.writeFragment({\r\n        id: `User:${userId}`,\r\n        fragment: gql`\r\n          fragment UserVerifCodeFragment on User {\r\n            isVerified\r\n          }\r\n        `,\r\n        data: {\r\n          isVerified: true,\r\n        },\r\n      });\r\n      alert(\"성공적으로 인증 되었습니다.\");\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  const [confirmVerificationCodeMutation, { loading, data }] = useMutation<\r\n    confirmVerificationCode,\r\n    confirmVerificationCodeVariables\r\n  >(CONFIRM_VALIDATION_CODE_MUTATION, { onCompleted });\r\n  useEffect(() => {\r\n    confirmVerificationCodeMutation({\r\n      variables: {\r\n        input: {\r\n          code,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-indigo-500\">\r\n        {loading && (\r\n          <h1 className=\"text-white font-semibold text-2xl\">Loading...</h1>\r\n        )}\r\n        {!loading && data?.confirmVerificationCode.error && (\r\n          <>\r\n            <h1 className=\"text-white font-semibold text-2xl\">\r\n              {data?.confirmVerificationCode.error}\r\n            </h1>\r\n            <Link className=\"text-white mt-10\" to=\"/\">\r\n              홈으로 가기\r\n            </Link>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\hooks\\useMe.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\ProductGridItem.tsx",["119","120"],"import React, { useEffect, useRef } from \"react\";\r\nimport { getNameSuppressed } from \"../utils\";\r\n\r\ninterface IProps {\r\n  name: string;\r\n  price: number;\r\n  bigImg: string | null;\r\n  savedAmount: number;\r\n}\r\n\r\nexport const ProductGridItem: React.FC<IProps> = ({ bigImg, name, price }) => {\r\n  return (\r\n    <div className=\"w-full h-full  shadow-xl \">\r\n      <div\r\n        className=\" py-24 md:w-full md:h-2/3  md:py-0 bg-center bg-cover  rounded-t-lg border-4 border-indigo-900 border-b-0  \"\r\n        style={{ backgroundImage: `url(${bigImg})` }}\r\n      ></div>\r\n      <div className=\"grid grid-cols-2 md:h-1/3 py-10  md:py-0 rounded-b-lg w-full bg-indigo-800 border-4 border-t-0 border-indigo-900\">\r\n        <h1 className=\"text-amber-300 font-semibold  flex justify-center items-center text-xl md:text-base lg:text-xl xl:text-2xl px-3\">\r\n          {getNameSuppressed(name)}\r\n        </h1>\r\n        <h1 className=\"flex justify-center items-center text-amber-300 font-semibold text-xl md:text-base lg:text-xl xl:text-2xl px-3\">\r\n          {price}원\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\utils.ts",["121","122"],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\Menu.tsx",["123"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faHome,\r\n  faUser,\r\n  faArrowCircleRight,\r\n  faArrowCircleLeft,\r\n  faCommentDots,\r\n  faPlusCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport \"../styles/animation.css\";\r\nimport { currentHomePage } from \"../apollo\";\r\n\r\ninterface IHomeMenuProps {\r\n  totalPages?: number | null;\r\n  totalProducts?: number | null;\r\n  page?: number | null;\r\n  setPage?: React.Dispatch<React.SetStateAction<number>> | null;\r\n}\r\n\r\nexport const Menu: React.FC<IHomeMenuProps> = ({\r\n  totalPages,\r\n  totalProducts,\r\n  page,\r\n  setPage,\r\n}) => {\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const location = useLocation();\r\n  const menuDiv = useRef<HTMLDivElement>(null);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const triggerMenu = () => {\r\n    if (menuOpen) {\r\n      //  close It!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuSmall\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setMenuOpen((prev) => !prev);\r\n      }\r\n    } else {\r\n      //  Open it!\r\n      if (menuDiv.current) {\r\n        menuDiv.current.id = \"menuBig\";\r\n        menuDiv.current.style.pointerEvents = \"none\";\r\n        setTimeout(() => {\r\n          if (menuDiv.current) {\r\n            menuDiv.current.style.pointerEvents = \"inherit\";\r\n          }\r\n        }, 1000);\r\n        setTimeout(() => {\r\n          setMenuOpen((prev) => !prev);\r\n        }, 500);\r\n      }\r\n    }\r\n  };\r\n  const onClickMovePage = (e: any) => {\r\n    if (totalPages && totalProducts && page && setPage) {\r\n      let target = e.target;\r\n      if (e.target.tagName === \"path\") {\r\n        target = e.target.parentNode;\r\n      }\r\n      const targetIconAhead = target.getAttribute(\"data-icon\").split(\"-\")[2];\r\n      if (targetIconAhead === \"right\") {\r\n        if (page < totalPages) {\r\n          setPage((prev) => prev + 1);\r\n          currentHomePage(page + 1);\r\n        }\r\n      }\r\n      if (targetIconAhead === \"left\") {\r\n        if (page > 1) {\r\n          setPage((prev) => prev - 1);\r\n          currentHomePage(page - 1);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const path = location.pathname;\r\n    if (path === \"/\") {\r\n      setMode(\"home\");\r\n    }\r\n    if (path === \"/me\") {\r\n      setMode(\"me\");\r\n    }\r\n    if (path === \"/messages\") {\r\n      setMode(\"messages\");\r\n    }\r\n    triggerMenu();\r\n  }, [location]);\r\n  return (\r\n    <div className=\" flex justify-center items-center max-w-screen-md  mx-16 md:mx-auto fixed bottom-0 left-0 right-0  \">\r\n      <div\r\n        ref={menuDiv}\r\n        className=\"md:px-12 px-10 py-5 my-5   flex items-center justify-around  shadow-2xl bg-amber-300  rounded-full  \"\r\n      >\r\n        {mode === \"home\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleLeft}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={triggerMenu}\r\n                icon={faHome}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <h1\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow  \"\r\n              >\r\n                {page}\r\n              </h1>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                onClick={onClickMovePage}\r\n                icon={faArrowCircleRight}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to={`/me`}>\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"me\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/messages\">\r\n                <FontAwesomeIcon\r\n                  icon={faCommentDots}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faUser}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n        {mode === \"messages\" && (\r\n          <>\r\n            {menuOpen && (\r\n              <Link to=\"/\">\r\n                <FontAwesomeIcon\r\n                  icon={faHome}\r\n                  className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n            {menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-indigo-400 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {!menuOpen && (\r\n              <FontAwesomeIcon\r\n                icon={faCommentDots}\r\n                onClick={triggerMenu}\r\n                className=\"text-3xl text-gray-100 cursor-pointer md:text-4xl slowToShow\"\r\n              />\r\n            )}\r\n            {menuOpen && (\r\n              <Link to=\"/me\">\r\n                <FontAwesomeIcon\r\n                  icon={faUser}\r\n                  className=\"text-3xl text-indigo-100 cursor-pointer md:text-4xl slowToShow\"\r\n                />\r\n              </Link>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      {mode === \"home\" && (\r\n        <div className=\"fixed bottom-0 right-0\">\r\n          <Link to=\"/product/new\">\r\n            <FontAwesomeIcon\r\n              icon={faPlusCircle}\r\n              className=\"mr-2 md:mr-5 mb-7 2xl:mr-10 text-5xl text-indigo-800\"\r\n            />\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\fragment.ts",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Me.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Messages.tsx",["124"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\nexport const Messages = () => {\r\n  const history = useHistory();\r\n  const { loading, data } = useMe();\r\n  useEffect(() => {\r\n    if (!loading && data?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n  return <div>물좀 가져옴</div>;\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\UserProfile.tsx",["125"],"import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\nexport const UserProfile = () => {\r\n  const history = useHistory();\r\n  const { loading, data } = useMe();\r\n  useEffect(() => {\r\n    if (!loading && data?.me.user?.isVerified === false) {\r\n      history.push(\"/not-valid-user\");\r\n    }\r\n  }, []);\r\n  return <div>UserProfile</div>;\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\NotValidUser.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\WalletHistory.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\Product.tsx",["126","127"],"import React, { useEffect } from \"react\";\r\nimport { gql, useMutation, useQuery } from \"@apollo/client\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { PRODUCTS_FRAGMENT } from \"../fragment\";\r\nimport {\r\n  findProductById,\r\n  findProductByIdVariables,\r\n} from \"../__generated__/findProductById\";\r\nimport { LoadingSpinner } from \"../components/LoadingSpinner\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { getNameSuppressed } from \"../utils\";\r\nimport { joinRoom, joinRoomVariables } from \"../__generated__/joinRoom\";\r\nimport { useMe } from \"../hooks/useMe\";\r\n\r\ninterface IParams {\r\n  id: string;\r\n}\r\n\r\nconst FIND_PRODUCT_BY_ID_QUERY = gql`\r\n  query findProductById($productId: Float!) {\r\n    findProductById(productId: $productId) {\r\n      ok\r\n      error\r\n      product {\r\n        ...productsParts\r\n        room {\r\n          participantCounts\r\n          isMeInRoom\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ${PRODUCTS_FRAGMENT}\r\n`;\r\n\r\nconst JOIN_ROOM_MUTATION = gql`\r\n  mutation joinRoom($input: JoinRoomInput!) {\r\n    joinRoom(input: $input) {\r\n      ok\r\n      error\r\n      soldout\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Product = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams<IParams>();\r\n  const { data: userData, loading: userLoading } = useMe();\r\n  const { loading, data, refetch } = useQuery<\r\n    findProductById,\r\n    findProductByIdVariables\r\n  >(FIND_PRODUCT_BY_ID_QUERY, {\r\n    variables: {\r\n      productId: +id,\r\n    },\r\n  });\r\n\r\n  const onCompleted = (data: joinRoom) => {\r\n    const {\r\n      joinRoom: { ok, error, soldout },\r\n    } = data;\r\n    if (ok) {\r\n      alert(\"성공적으로 등록 되셨습니다.\");\r\n      if (soldout) {\r\n        alert(\r\n          \"상품의 금액 임계점을 넘은 상태이므로 랜덤으로 구매자를 뽑습니다.\"\r\n        );\r\n      }\r\n      refetch({ productId: +id });\r\n    }\r\n    if (!ok && error) {\r\n      alert(error);\r\n    }\r\n  };\r\n  const [joinRoomMutation, { data: joinRoomData }] = useMutation<\r\n    joinRoom,\r\n    joinRoomVariables\r\n  >(JOIN_ROOM_MUTATION, { onCompleted });\r\n\r\n  const onClickJoinRoom = async () => {\r\n    if (data?.findProductById.product && userData?.me.user) {\r\n      const joinRoomPrice = Math.ceil(data.findProductById.product.price / 100);\r\n      await joinRoomMutation({\r\n        variables: {\r\n          input: {\r\n            price: joinRoomPrice,\r\n            productId: data.findProductById.product.id,\r\n            userId: userData.me.user?.id,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const onClickToGoBack = () => {\r\n    history.goBack();\r\n  };\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n  if (!userLoading && userData?.me.user?.isVerified === false) {\r\n    history.push(\"/not-valid-user\");\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"fixed top-0 left-0  ml-3 mt-5\">\r\n        <FontAwesomeIcon\r\n          icon={faArrowLeft}\r\n          onClick={onClickToGoBack}\r\n          className=\"text-2xl 2xl:text-5xl text-amber-300 transition-colors cursor-pointer\"\r\n        />\r\n      </div>\r\n      <div className=\"max-w-screen-2xl min-h-screen mx-12 2xl:mx-auto shadow-2xl bg-indigo-500\">\r\n        <div className=\"flex items-center flex-col md:flex-row  pt-10 mx-5  shadow-xl\">\r\n          <div\r\n            className=\"bg-cover bg-center  h-48 md:h-96  w-full md:rounded-l-2xl md:rounded-t-none rounded-t-2xl border-4 border-indigo-900\"\r\n            style={{\r\n              backgroundImage: `url(${data?.findProductById.product?.bigImg})`,\r\n            }}\r\n          ></div>\r\n          <div className=\"md:h-96 h-48  w-full bg-indigo-700 text-amber-300 grid grid-cols-2 md:rounded-r-2xl md:rounded-b-none rounded-b-2xl border-4 border-indigo-900 md:border-l-0 border-t-0 md:border-t-4\">\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center border-r border-b border-indigo-500 p-3 \">\r\n              <span>📦</span>\r\n              {data?.findProductById.product?.name && (\r\n                <span>\r\n                  {getNameSuppressed(data?.findProductById.product?.name)}\r\n                </span>\r\n              )}\r\n            </h1>\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center border-b border-indigo-500 p-3\">\r\n              <span>💲</span>\r\n              <span>{data?.findProductById.product?.price}원</span>\r\n            </h1>\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center border-r border-indigo-500 p-3\">\r\n              <span>🛒</span>\r\n              <Link to={`/category/slug`} className=\"hover:underline\">\r\n                {data?.findProductById.product?.category.slug}\r\n              </Link>\r\n            </h1>\r\n            <h1 className=\"text-xl font-semibold md:text-3xl  flex flex-col justify-center items-center p-3\">\r\n              <span>👨‍👧‍👧</span>\r\n              <span>\r\n                {data?.findProductById.product?.room?.participantCounts}\r\n              </span>\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        {/*  */}\r\n\r\n        <div className=\"mt-10 mx-5 grid grid-cols-2\">\r\n          <div className=\"py-5 px-3 bg-indigo-700 text-center font-semibold text-xl text-gray-200 rounded-l-2xl   focus:outline-none\">\r\n            현재까지{\" \"}\r\n            <span className=\"text-amber-300\">\r\n              {data?.findProductById.product?.savedAmount}원\r\n            </span>\r\n          </div>\r\n          {data?.findProductById.product?.room?.isMeInRoom ? (\r\n            <button className=\"py-5 px-3 bg-teal-500 rounded-r-2xl focus:outline-none font-semibold text-xl text-amber-300 transition-colors  cursor-not-allowed\">\r\n              이미 참여하셨습니다.\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={onClickJoinRoom}\r\n              className=\"py-5 px-3 bg-teal-500 rounded-r-2xl focus:outline-none font-semibold text-xl text-gray-200 hover:text-amber-300 transition-colors focus:ring-4 ring-teal-600 \"\r\n            >\r\n              참가하기\r\n            </button>\r\n          )}\r\n        </div>\r\n        {/*  */}\r\n        <div className=\"mt-10 mx-5 pb-10\">\r\n          <h1 className=\"bg-gray-200 py-16 px-5 rounded-2xl shadow-2xl md:text-xl\">\r\n            {data?.findProductById.product?.description}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\chldu\\Desktop\\front-end-practice\\src\\pages\\CreateProduct.tsx",["128","129","130","131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":7,"column":3,"nodeType":"139","messageId":"140","endLine":7,"endColumn":13},{"ruleId":"137","severity":1,"message":"141","line":15,"column":10,"nodeType":"139","messageId":"140","endLine":15,"endColumn":25},{"ruleId":"137","severity":1,"message":"142","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":19},{"ruleId":"137","severity":1,"message":"143","line":2,"column":15,"nodeType":"139","messageId":"140","endLine":2,"endColumn":30},{"ruleId":"137","severity":1,"message":"144","line":47,"column":27,"nodeType":"139","messageId":"140","endLine":47,"endColumn":31},{"ruleId":"145","severity":1,"message":"146","line":70,"column":34,"nodeType":"147","messageId":"148","endLine":70,"endColumn":35,"suggestions":"149"},{"ruleId":"145","severity":1,"message":"146","line":70,"column":59,"nodeType":"147","messageId":"148","endLine":70,"endColumn":60,"suggestions":"150"},{"ruleId":"137","severity":1,"message":"151","line":5,"column":10,"nodeType":"139","messageId":"140","endLine":5,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":79,"column":34,"nodeType":"147","messageId":"148","endLine":79,"endColumn":35,"suggestions":"152"},{"ruleId":"145","severity":1,"message":"146","line":79,"column":59,"nodeType":"147","messageId":"148","endLine":79,"endColumn":60,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":47,"column":6,"nodeType":"156","endLine":47,"endColumn":8,"suggestions":"157"},{"ruleId":"154","severity":1,"message":"158","line":56,"column":6,"nodeType":"156","endLine":56,"endColumn":8,"suggestions":"159"},{"ruleId":"137","severity":1,"message":"160","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"161","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":34},{"ruleId":"137","severity":1,"message":"138","line":1,"column":10,"nodeType":"139","messageId":"140","endLine":1,"endColumn":20},{"ruleId":"137","severity":1,"message":"162","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":15},{"ruleId":"154","severity":1,"message":"163","line":94,"column":6,"nodeType":"156","endLine":94,"endColumn":16,"suggestions":"164"},{"ruleId":"154","severity":1,"message":"165","line":12,"column":6,"nodeType":"156","endLine":12,"endColumn":8,"suggestions":"166"},{"ruleId":"154","severity":1,"message":"165","line":12,"column":6,"nodeType":"156","endLine":12,"endColumn":8,"suggestions":"167"},{"ruleId":"137","severity":1,"message":"160","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"168","line":77,"column":36,"nodeType":"139","messageId":"140","endLine":77,"endColumn":48},{"ruleId":"137","severity":1,"message":"169","line":77,"column":10,"nodeType":"139","messageId":"140","endLine":77,"endColumn":31},{"ruleId":"137","severity":1,"message":"170","line":84,"column":5,"nodeType":"139","messageId":"140","endLine":84,"endColumn":14},{"ruleId":"137","severity":1,"message":"171","line":85,"column":5,"nodeType":"139","messageId":"140","endLine":85,"endColumn":17},{"ruleId":"137","severity":1,"message":"172","line":86,"column":5,"nodeType":"139","messageId":"140","endLine":86,"endColumn":11},{"ruleId":"154","severity":1,"message":"173","line":94,"column":6,"nodeType":"156","endLine":94,"endColumn":8,"suggestions":"174"},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faSpinner' is defined but never used.","'useApolloClient' is defined but never used.","'data' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["177","178"],["179","180"],"'isLoggedIn' is defined but never used.",["181","182"],["183","184"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'page' and 'refetch'. Either include them or remove the dependency array.","ArrayExpression",["185"],"React Hook useEffect has missing dependencies: 'code' and 'confirmVerificationCodeMutation'. Either include them or remove the dependency array.",["186"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'useMe' is defined but never used.","React Hook useEffect has a missing dependency: 'triggerMenu'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'data?.me.user?.isVerified', 'history', and 'loading'. Either include them or remove the dependency array.",["188"],["189"],"'joinRoomData' is assigned a value but never used.","'createProductMutation' is assigned a value but never used.","'getValues' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'errors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'userData?.me.user?.isVerified', and 'userLoading'. Either include them or remove the dependency array.",["190"],"no-global-assign","no-unsafe-negation",{"messageId":"191","fix":"192","desc":"193"},{"messageId":"194","fix":"195","desc":"196"},{"messageId":"191","fix":"197","desc":"193"},{"messageId":"194","fix":"198","desc":"196"},{"messageId":"191","fix":"199","desc":"193"},{"messageId":"194","fix":"200","desc":"196"},{"messageId":"191","fix":"201","desc":"193"},{"messageId":"194","fix":"202","desc":"196"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"209","fix":"211"},{"desc":"212","fix":"213"},"removeEscape",{"range":"214","text":"215"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"216","text":"217"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"218","text":"215"},{"range":"219","text":"217"},{"range":"220","text":"215"},{"range":"221","text":"217"},{"range":"222","text":"215"},{"range":"223","text":"217"},"Update the dependencies array to be: [page, refetch]",{"range":"224","text":"225"},"Update the dependencies array to be: [code, confirmVerificationCodeMutation]",{"range":"226","text":"227"},"Update the dependencies array to be: [location, triggerMenu]",{"range":"228","text":"229"},"Update the dependencies array to be: [data?.me.user?.isVerified, history, loading]",{"range":"230","text":"231"},{"range":"232","text":"231"},"Update the dependencies array to be: [history, userData?.me.user?.isVerified, userLoading]",{"range":"233","text":"234"},[2101,2102],"",[2101,2101],"\\",[2126,2127],[2126,2126],[2233,2234],[2233,2233],[2258,2259],[2258,2258],[1301,1303],"[page, refetch]",[1570,1572],"[code, confirmVerificationCodeMutation]",[2653,2663],"[location, triggerMenu]",[371,373],"[data?.me.user?.isVerified, history, loading]",[374,376],[2368,2370],"[history, userData?.me.user?.isVerified, userLoading]"]